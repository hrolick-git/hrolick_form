[{"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\index.js":"1","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\App.js":"2","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\MultiStepForm.jsx":"3","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\theme\\index.js":"4","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\utils\\useWindowDimensions.js":"5","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormModel\\formInitialValues.js":"6","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormModel\\formModel.js":"7","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormModel\\validationSchema.js":"8","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\FormikOnError.jsx":"9","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Disclaimer.jsx":"10","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education.jsx":"11","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\PersonalData\\PersonalData.jsx":"12","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\EmploymentHistory.jsx":"13","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\Stepper\\AlbaStepIcon.jsx":"14","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\theme\\typography.js":"15","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\ThankYou.jsx":"16","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Introduction.jsx":"17","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\utils\\index.js":"18","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\SubmitBtn.jsx":"19","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\EmploymentHistory_00.jsx":"20","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\EmploymentHistory_01.jsx":"21","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\EmploymentHistory_02.jsx":"22","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\PersonalData\\PersonalData_03.jsx":"23","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\PersonalData\\PersonalData_01.jsx":"24","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\PersonalData\\PersonalData_02.jsx":"25","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education_03.jsx":"26","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education_04.jsx":"27","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education_02.jsx":"28","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education_01.jsx":"29","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\index.js":"30","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\ProfessionalReferencesTwin.jsx":"31","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputFieldNum.jsx":"32","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputField.jsx":"33","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\CheckboxMiniField.jsx":"34","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputFieldSsn.jsx":"35","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputFileUpload.jsx":"36","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\MultilineTextField.jsx":"37","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\SelectField.jsx":"38","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\DatePickerField.jsx":"39","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputFieldPhone.jsx":"40","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\CheckboxField.jsx":"41","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\theme\\shadows.js":"42","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\StaticPickers.jsx":"43"},{"size":393,"mtime":1611328094388,"results":"44","hashOfConfig":"45"},{"size":642,"mtime":1612350717436,"results":"46","hashOfConfig":"45"},{"size":11525,"mtime":1653760691414,"results":"47","hashOfConfig":"45"},{"size":704,"mtime":1611328094389,"results":"48","hashOfConfig":"45"},{"size":6156,"mtime":1614861464672,"results":"49","hashOfConfig":"45"},{"size":4329,"mtime":1653728443608,"results":"50","hashOfConfig":"45"},{"size":19645,"mtime":1653728443609,"results":"51","hashOfConfig":"45"},{"size":5871,"mtime":1653728443610,"results":"52","hashOfConfig":"45"},{"size":1366,"mtime":1614861464673,"results":"53","hashOfConfig":"45"},{"size":4838,"mtime":1653760994875,"results":"54","hashOfConfig":"45"},{"size":1326,"mtime":1612350717441,"results":"55","hashOfConfig":"45"},{"size":1215,"mtime":1612350717444,"results":"56","hashOfConfig":"45"},{"size":1241,"mtime":1612350717442,"results":"57","hashOfConfig":"45"},{"size":1717,"mtime":1653759320644,"results":"58","hashOfConfig":"45"},{"size":1870,"mtime":1612350717439,"results":"59","hashOfConfig":"45"},{"size":1826,"mtime":1653761130018,"results":"60","hashOfConfig":"45"},{"size":4099,"mtime":1653738667415,"results":"61","hashOfConfig":"45"},{"size":570,"mtime":1653728443616,"results":"62","hashOfConfig":"45"},{"size":681,"mtime":1653728443611,"results":"63","hashOfConfig":"45"},{"size":2921,"mtime":1611328094393,"results":"64","hashOfConfig":"45"},{"size":8128,"mtime":1612350717442,"results":"65","hashOfConfig":"45"},{"size":4540,"mtime":1612350717442,"results":"66","hashOfConfig":"45"},{"size":4747,"mtime":1653728443621,"results":"67","hashOfConfig":"45"},{"size":6357,"mtime":1611328094395,"results":"68","hashOfConfig":"45"},{"size":4644,"mtime":1611328094396,"results":"69","hashOfConfig":"45"},{"size":4797,"mtime":1653728443619,"results":"70","hashOfConfig":"45"},{"size":4794,"mtime":1653728443619,"results":"71","hashOfConfig":"45"},{"size":4808,"mtime":1653728443618,"results":"72","hashOfConfig":"45"},{"size":5433,"mtime":1653728443617,"results":"73","hashOfConfig":"45"},{"size":637,"mtime":1611328094385,"results":"74","hashOfConfig":"45"},{"size":3753,"mtime":1612350717443,"results":"75","hashOfConfig":"45"},{"size":2269,"mtime":1653738280202,"results":"76","hashOfConfig":"45"},{"size":2219,"mtime":1653738280202,"results":"77","hashOfConfig":"45"},{"size":1848,"mtime":1612350717436,"results":"78","hashOfConfig":"45"},{"size":2957,"mtime":1653738280211,"results":"79","hashOfConfig":"45"},{"size":2181,"mtime":1612350717437,"results":"80","hashOfConfig":"45"},{"size":2300,"mtime":1653738280202,"results":"81","hashOfConfig":"45"},{"size":4541,"mtime":1653738280209,"results":"82","hashOfConfig":"45"},{"size":4866,"mtime":1611604287766,"results":"83","hashOfConfig":"45"},{"size":2843,"mtime":1653738280202,"results":"84","hashOfConfig":"45"},{"size":1909,"mtime":1611604287765,"results":"85","hashOfConfig":"45"},{"size":1645,"mtime":1611328094390,"results":"86","hashOfConfig":"45"},{"size":3749,"mtime":1611328094387,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"t1xpp8",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\index.js",[],["195","196"],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\App.js",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\MultiStepForm.jsx",["197","198"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport { useForm, useStep } from \"react-hooks-helper\";\r\nimport clsx from 'clsx';\r\nimport {\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Grid\r\n} from '@material-ui/core';\r\nimport { Formik, Form } from 'formik';\r\nimport checkoutFormModel from '../components/FormModel/formModel';\r\nimport formInitialValues from \"../components/FormModel/formInitialValues\";\r\nimport validationSchema from \"../components/FormModel/validationSchema\";\r\nimport { addPost } from \"../utils\";\r\nimport Introduction from \"./Introduction\";\r\nimport AlbaStepIcon from \"../components/Stepper/AlbaStepIcon\";\r\nimport PersonalData from \"./PersonalData/PersonalData\";\r\nimport Education from \"./Education/Education\";\r\nimport EmploymentHistory from \"./EmploymentHistory/EmploymentHistory\";\r\nimport Disclaimer from \"./Disclaimer\";\r\nimport ThankYou from \"./ThankYou\";\r\nimport {useStepsScroll} from \"../utils/useWindowDimensions\";\r\nimport FormikOnError from \"./FormikOnError\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nconst { formId, formField } = checkoutFormModel;\r\n\r\nconst steps = [\r\n    { id: \"introduction\", title: \"Introduction\", btnNext: \"Register\" },\r\n    { id: \"personalData\", title: \"Personal Data\", btnNext: \"Save & Next Page\" },\r\n    { id: \"education\", title: \"Education\", btnNext: \"Save & Next Page\" },\r\n    { id: \"employmentHistory\", title: \"Employment History\", btnNext: \"Save & Next Page\" },\r\n    { id: \"disclaimer\", title: \"Disclaimer\", btnNext: \"Finish & Send\" },\r\n    { id: \"end\", title: \"Thank you!\", btnNext: \"Go Home\" }\r\n];\r\n\r\nconst MultiStepForm = () => {\r\n    const [formData, setForm] = useForm(formInitialValues);\r\n    const { step, index: stepIndex, navigation } = useStep({ initialStep: 0, steps });\r\n    const { go } = navigation;\r\n    const currentValidationSchema = validationSchema[stepIndex];\r\n    const { id: stepId, btnNext } = step;\r\n    const [completed, setCompleted] = useState([false, false, false, false, false]);\r\n    const [unlockedSteps, setUnlockedSteps] = useState([true, false, false, false, false]);\r\n    const checkerArray = arr => arr.every(v => v === true);\r\n    const elRef = useRef();\r\n    const elActiveStep = useRef();\r\n    const { width } = useStepsScroll(elRef);\r\n    const props = { formData, setForm, navigation, formField };\r\n\r\n    const setUncompleted = () => {\r\n        const newCompleted = completed;\r\n        newCompleted[stepIndex] = false;\r\n        setCompleted([...newCompleted]);\r\n    }\r\n\r\n    const handleSubmit = (values, actions) => {\r\n        const newCompleted = completed;\r\n        const newUnlockedSteps = unlockedSteps;\r\n        newCompleted[stepIndex] = true;\r\n        newUnlockedSteps[stepIndex+1] = true;\r\n        setCompleted([...newCompleted]);\r\n        setUnlockedSteps([...newUnlockedSteps]);\r\n\r\n        if(checkerArray(completed)) {\r\n            if(completed.length === steps.length - 1 && checkerArray(completed)) {\r\n                // addPost(values);\r\n                console.log(\"Finish.\");\r\n            }\r\n            go(5);\r\n        } else {\r\n            actions.setTouched({});\r\n            actions.setSubmitting(false);\r\n            if(stepIndex + 1 === steps.length-1 && !checkerArray(completed)) {\r\n                const index = completed.findIndex(element => element !== true);\r\n                go(index);\r\n            } else {\r\n                go(stepIndex + 1);\r\n            }\r\n            if (width < 992) {\r\n                window.scrollTo( 0, 0 );\r\n            }\r\n        }\r\n    }\r\n\r\n    const renderStepContent = (id, values, clickSubmitBtn, isSubmitting, btnNext) => {\r\n        const btnSettings = {clickSubmitBtn, isSubmitting, btnNext};\r\n        switch (id) {\r\n            case \"introduction\":\r\n                return <Introduction {...props} btnSettings={btnSettings} />;\r\n            case \"personalData\":\r\n                return <PersonalData {...props} btnSettings={btnSettings} />;\r\n            case \"education\":\r\n                return <Education {...props} btnSettings={btnSettings} />;\r\n            case \"employmentHistory\":\r\n                return <EmploymentHistory {...props} values={values} btnSettings={btnSettings} />;\r\n            case \"disclaimer\":\r\n                return <Disclaimer {...props} btnSettings={btnSettings} values={values} />;\r\n            case \"end\":\r\n                return <ThankYou {...props} btnSettings={btnSettings} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const scrollContainer = elRef.current;\r\n        const activeItem = elActiveStep.current;\r\n        if(!activeItem) {\r\n            return;\r\n        }\r\n        const scrollRect = scrollContainer.getBoundingClientRect();\r\n        const activeRect = activeItem.getBoundingClientRect();\r\n        const scrollLeftPosition = activeRect.left - scrollRect.left - (scrollRect.width / 2) + (activeRect.width / 2);\r\n        if (scrollContainer && width < 992) {\r\n            scrollContainer.scrollLeft += scrollLeftPosition;\r\n        }\r\n    }, [stepIndex]);\r\n\r\n    return (\r\n        <div className=\"react-form__wrap\">\r\n            <React.Fragment>\r\n                <div className=\"stepper__wrap\">\r\n                    <Stepper ref={elRef} nonLinear activeStep={stepIndex} className=\"stepper\" connector={0}>\r\n                    {steps.map(item => {\r\n                        const endForm = width < 536 && item.id === \"end\";\r\n                        return (\r\n                            <Step\r\n                                ref={(ref) => {\r\n                                    if(steps.indexOf(item) === stepIndex) {\r\n                                        elActiveStep.current = ref;\r\n                                    }\r\n                                }}\r\n                                onClick={() => go(steps.indexOf(item))}\r\n                                key={item.id}\r\n                                className={\r\n                                    clsx(\"stepper__item\",\r\n                                        steps.indexOf(item) === stepIndex && \"active\",\r\n                                        checkerArray(completed) && \"not-click\",\r\n                                        width > 536 && item.id === \"end\" && \"not-display\",\r\n                                        endForm && \"finish\",\r\n                                        !unlockedSteps[steps.indexOf(item)] && \"step-lock\"\r\n                                    )}>\r\n\r\n                                <StepLabel\r\n                                    className=\"stepper__label\"\r\n                                    key={item.id}\r\n                                    completed={completed[steps.indexOf(item)]}\r\n                                    StepIconComponent={(props) => <AlbaStepIcon {...props} endForm={endForm} width={width} />}>\r\n                                    <span className={clsx(\"stepper__label__title\", steps.indexOf(item) === stepIndex && \"active\")}>\r\n                                        {!endForm && item.title}\r\n                                    </span>\r\n                                </StepLabel>\r\n                            </Step>\r\n                        )\r\n                    })}\r\n                </Stepper>\r\n                </div>\r\n                <div className=\"react-form__over\">\r\n                    <React.Fragment>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            className=\"react-form__container\"\r\n                        >\r\n                        {stepIndex === steps.length ? (\r\n                            <div>Success</div>\r\n                        ) : (\r\n                            <Formik\r\n                                initialValues={formInitialValues}\r\n                                validationSchema={currentValidationSchema}\r\n                                onSubmit={handleSubmit}\r\n                            >\r\n                                {({ isSubmitting, isValid, values }) => {\r\n                                    const clickSubmitBtn = () => {\r\n                                        if(!isValid) {\r\n                                            setUncompleted()\r\n                                        }\r\n                                    }\r\n                                    const btnSettings = {clickSubmitBtn, isSubmitting, btnNext};\r\n                                    return (\r\n                                        <Form id={formId} className=\"react-form\" noValidate>\r\n                                            <FormikOnError>\r\n                                                <div className={clsx(\"react-form__content\", stepId === \"end\" && \"align-items-center\")}>\r\n                                                    {width < 992 && renderStepContent(stepId, values, clickSubmitBtn, isSubmitting, btnNext)}\r\n                                                    {width > 992 && (\r\n                                                        <SwipeableViews\r\n                                                            disabled={true}\r\n                                                            springConfig={{\r\n                                                                delay: '0s',\r\n                                                                duration: '1s',\r\n                                                                easeFunction: 'cubic-bezier(0.15, 0.3, 0.25, 1)'\r\n                                                            }}\r\n                                                            containerStyle={{\r\n                                                                transition: 'transform 1s cubic-bezier(0.15, 0.3, 0.25, 1) 0s'\r\n                                                            }}\r\n                                                            slideStyle={{duration: '1s', delay: '0s'}}\r\n                                                            slideClassName=\"fr-slide\"\r\n                                                            index={stepIndex}\r\n                                                        >\r\n                                                            <Introduction {...props} btnSettings={btnSettings} />\r\n                                                            <PersonalData {...props} btnSettings={btnSettings} />\r\n                                                            <Education {...props} btnSettings={btnSettings} />\r\n                                                            <EmploymentHistory {...props} values={values} btnSettings={btnSettings} />\r\n                                                            <Disclaimer {...props} btnSettings={btnSettings} values={values} />\r\n                                                            <ThankYou {...props} btnSettings={btnSettings} />\r\n                                                        </SwipeableViews>\r\n                                                    )}\r\n                                                </div>\r\n                                            </FormikOnError>\r\n                                        </Form>\r\n                                    )\r\n                                }}\r\n                            </Formik>\r\n                        )}\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                </div>\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MultiStepForm;\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\theme\\index.js",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\utils\\useWindowDimensions.js",["199","200","201","202","203","204","205"],"import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n\r\nexport function useBlockScroll(elRef) {\r\n    const { height, width } = useWindowDimensions();\r\n    let result = false;\r\n\r\n    const isHover = (e) => {\r\n        return result;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const el = elRef.current;\r\n        const textAreas = el.querySelectorAll('textarea');\r\n\r\n        if (el && width > 992) {\r\n            const onWheel = e => {\r\n                e.preventDefault();\r\n                const isMouse = e.deltaX === 0 && Number.isInteger(e.deltaY);\r\n                for(let i=0, l=textAreas.length; i<l; i++){\r\n                    const textArea = textAreas[i];\r\n                    const parent = textArea.parentElement;\r\n                    parent.onmouseover = parent.onmouseout = parent.onmousemove = handler;\r\n                    function handler(event) {\r\n                        if (event.type === 'mouseover') {\r\n                            el.removeEventListener(\"wheel\", onWheel);\r\n                        }\r\n                        if (event.type === 'mouseout') {\r\n                            el.addEventListener(\"wheel\", onWheel);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(isMouse) {\r\n                    if(e.deltaY < 0) {\r\n                        el.scrollTo({\r\n                            left: el.scrollLeft - 100,\r\n                            behavior: \"auto\"\r\n                        });\r\n                    } else {\r\n                        el.scrollTo({\r\n                            left: el.scrollLeft + 100,\r\n                            behavior: \"auto\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaY * 4),\r\n                    });\r\n                }\r\n                if (e.deltaX) {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaX * 4),\r\n                    });\r\n                }\r\n            };\r\n            el.addEventListener(\"wheel\", onWheel);\r\n            return () => el.removeEventListener(\"wheel\", onWheel);\r\n        }\r\n    }, [width]);\r\n\r\n    return { width };\r\n}\r\n\r\nexport function useStepsScroll(elRef) {\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    useEffect(() => {\r\n        const el = elRef.current;\r\n        if (el && width < 992) {\r\n            const onWheel = e => {\r\n                e.preventDefault();\r\n                if(e.deltaY === 100 || e.deltaY === -100) {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaY * 8),\r\n                        behavior: \"auto\"\r\n                    });\r\n                } else {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaY * 4),\r\n                    });\r\n                }\r\n                if (e.deltaX) {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaX * 4),\r\n                    });\r\n                }\r\n            };\r\n            el.addEventListener(\"wheel\", onWheel);\r\n            return () => el.removeEventListener(\"wheel\", onWheel);\r\n        }\r\n    }, [width]);\r\n\r\n    return { width };\r\n}\r\n\r\nexport function useCalculateHeight() {\r\n    const [height, setHeight] = useState(0);\r\n    const { width } = useWindowDimensions();\r\n\r\n    useEffect(() => {\r\n        const calculateHeight = () => {\r\n            const containers = document.querySelectorAll(\".fr-slide\");\r\n            for(let i=0, l=containers.length; i<l; i++){\r\n                const container =  containers[i];\r\n                const contentBlocks = container.querySelectorAll(\"div.form_sub > div.MuiGrid-root\");\r\n                const arrayOhHeights = [];\r\n                for(let i=0, l=contentBlocks.length; i<l; i++){\r\n                    arrayOhHeights.push( contentBlocks[i].offsetHeight );\r\n                }\r\n                const result = arrayOhHeights.reduce(function(a, b) {\r\n                    return Math.max(a, b);\r\n                });\r\n                const verticalLines = container.querySelectorAll(\".vertical-line\");\r\n                for(let i=0, l=verticalLines.length; i<l; i++){\r\n                    if (width > 992) {\r\n                        verticalLines[i].style.height = result + \"px\";\r\n                    } else {\r\n                        verticalLines[i].style.height = \"1px\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        calculateHeight();\r\n        window.addEventListener(\"resize\", calculateHeight);\r\n        return () => window.removeEventListener(\"resize\", calculateHeight);\r\n    }, [width]);\r\n\r\n    return { height };\r\n}\r\n\r\nexport function useCalculateDisclaimer() {\r\n    const [height, setHeight] = useState(0);\r\n    const { width } = useWindowDimensions();\r\n\r\n    useEffect(() => {\r\n        const calculateHeightDisclaimer = () => {\r\n            const container = document.querySelector(\".fr-slide\");\r\n            const disclaimer = document.querySelector(\".form_sub_disclaimer__wrap\");\r\n            disclaimer.style.minHeight = \"1px\";\r\n            if (width > 992) {\r\n                disclaimer.style.minHeight = container.offsetHeight + \"px\";\r\n            } else {\r\n                disclaimer.style.minHeight = \"1px\";\r\n            }\r\n        }\r\n        calculateHeightDisclaimer();\r\n        window.addEventListener(\"resize\", calculateHeightDisclaimer);\r\n        return () => window.removeEventListener(\"resize\", calculateHeightDisclaimer);\r\n    }, [width]);\r\n\r\n    return { height };\r\n}\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormModel\\formInitialValues.js",["206"],"import checkoutFormModel from \"./formModel\";\r\nconst {\r\n    formField: {\r\n        personalData: {\r\n            fullName,\r\n            email,\r\n            position,\r\n            positionDate,\r\n            salary,\r\n            lastNumSsn,\r\n            firstName,\r\n            middleName,\r\n            lastName,\r\n            street,\r\n            city,\r\n            state,\r\n            zip,\r\n            phone,\r\n            phoneOther,\r\n            age,\r\n            availability: {\r\n                shiftFirst,\r\n                shiftSecond,\r\n                shiftThird,\r\n                comment,\r\n                weekends,\r\n                overtime,\r\n                ableStartDate,\r\n                howLearnAboutCompany,\r\n                everWorkedForCompany,\r\n                knowAnyoneWhoWorks,\r\n                legallyAuthorized,\r\n                sponsorshipRequire,\r\n            },\r\n            military: {\r\n                militaryServed\r\n            }\r\n        },\r\n        education: {\r\n            highSchool,\r\n            university,\r\n            technical,\r\n            other\r\n        },\r\n        employers,\r\n        references\r\n    }\r\n} = checkoutFormModel;\r\n\r\nexport default {\r\n    personalData: {\r\n        [fullName.name]: \"\",\r\n        [email.name]: \"\",\r\n        [position.name]: \"\",\r\n        [positionDate.name]: \"\",\r\n        [salary.name]: \"\",\r\n        [lastNumSsn.name]: \"\",\r\n        [firstName.name]: \"\",\r\n        [middleName.name]: \"\",\r\n        [lastName.name]: \"\",\r\n        [street.name]: \"\",\r\n        [city.name]: \"\",\r\n        [state.name]: \"\",\r\n        [zip.name]: \"\",\r\n        [phone.name]: \"\",\r\n        [phoneOther.name]: \"\",\r\n        [age.name]: \"\",\r\n        availability: {\r\n            [shiftFirst.name]: false,\r\n            [shiftSecond.name]: false,\r\n            [shiftThird.name]: false,\r\n            [comment.name]: \"\",\r\n            [weekends.name]: false,\r\n            [overtime.name]: false,\r\n            [ableStartDate.name]: \"\",\r\n            [howLearnAboutCompany.name]: \"\",\r\n            [everWorkedForCompany.name]: false,\r\n            [knowAnyoneWhoWorks.name]: false,\r\n            [legallyAuthorized.name]: false,\r\n            [sponsorshipRequire.name]: false,\r\n        },\r\n        military: {\r\n            [militaryServed.name]: false,\r\n        }\r\n    },\r\n    education: {\r\n        highSchool: {\r\n            [highSchool.address.name]: \"\",\r\n            [highSchool.graduate.name]: false,\r\n            [highSchool.institution.name]: \"\",\r\n            [highSchool.license.name]: \"\",\r\n            [highSchool.comment.name]: \"\"\r\n        },\r\n        university: {\r\n            [university.address.name]: \"\",\r\n            [university.graduate.name]: false,\r\n            [university.institution.name]: \"\",\r\n            [university.license.name]: \"\",\r\n            [university.comment.name]: \"\"\r\n        },\r\n        technical: {\r\n            [technical.address.name]: \"\",\r\n            [technical.graduate.name]: false,\r\n            [technical.institution.name]: \"\",\r\n            [technical.license.name]: \"\",\r\n            [technical.comment.name]: \"\"\r\n        },\r\n        other: {\r\n            [other.address.name]: \"\",\r\n            [other.graduate.name]: false,\r\n            [other.institution.name]: \"\",\r\n            [other.license.name]: \"\",\r\n            [other.comment.name]: \"\"\r\n        }\r\n    },\r\n    employers: [\r\n        {\r\n            [employers[0].companyName.name]: \"\",\r\n            [employers[0].staffingAgency.name]: false,\r\n            [employers[0].address.name]: \"\",\r\n            [employers[0].city.name]:\"\",\r\n            [employers[0].state.name]: \"\",\r\n            [employers[0].supervisorName.name]: \"\",\r\n            [employers[0].companyPhone.name]: \"\",\r\n            [employers[0].mayWeContact.name]: false,\r\n            [employers[0].dateEmployedFrom.name]: \"\",\r\n            [employers[0].dateEmployedTo.name]: \"\",\r\n            [employers[0].lastWage.name]: \"\",\r\n            [employers[0].describeJob.name]: \"\",\r\n            [employers[0].reasonLeaving.name]: \"\"\r\n        }\r\n    ],\r\n    references: [\r\n        {\r\n            [references[0].name.name]: \"\",\r\n            [references[0].address.name]: \"\",\r\n            [references[0].phone.name]: \"\",\r\n            [references[0].relationship.name]: \"\"\r\n        }\r\n    ],\r\n    resume: null,\r\n    workHistory: false,\r\n    iAgree: false\r\n};\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormModel\\formModel.js",["207"],"export default {\r\n    formId: 'appForm',\r\n    formField: {\r\n        personalData: {\r\n            fullName: {\r\n                name: 'fullName',\r\n                label: 'Full name',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 12,\r\n            },\r\n            email: {\r\n                name: 'email',\r\n                label: 'Email',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n            },\r\n            position: {\r\n                name: 'position',\r\n                label: 'Position applied for',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 8,\r\n            },\r\n            positionDate: {\r\n                name: 'positionDate',\r\n                label: 'Date',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n            },\r\n            salary: {\r\n                name: 'salary',\r\n                label: 'Salary/wage expectations',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            lastNumSsn: {\r\n                name: 'lastNumSsn',\r\n                label: 'Last 4 numbers of your ssn',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n                type: 'ssn'\r\n            },\r\n            firstName: {\r\n                name: 'firstName',\r\n                label: 'First Name',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            middleName: {\r\n                name: 'middleName',\r\n                label: 'Middle Name',\r\n                required: false,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            lastName: {\r\n                name: 'lastName',\r\n                label: 'Last Name',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            street: {\r\n                name: 'street',\r\n                label: 'Street Address',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 12,\r\n            },\r\n            city: {\r\n                name: 'city',\r\n                label: 'City',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            state: {\r\n                name: 'state',\r\n                label: 'State',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            zip: {\r\n                name: 'zip',\r\n                label: 'Zip Code',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n                type: 'number'\r\n            },\r\n            phone: {\r\n                name: 'phone',\r\n                label: 'Telephone/Cell',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n                type: 'phone'\r\n            },\r\n            phoneOther: {\r\n                name: 'phoneOther',\r\n                label: 'Other Telephone',\r\n                required: false,\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n                type: 'phone'\r\n            },\r\n            age: {\r\n                name: 'age',\r\n                label: 'Specify your age',\r\n                required: false,\r\n                col: 4,\r\n                type: \"number\"\r\n            },\r\n            availability: {\r\n                shiftFirst: {\r\n                    name: 'shiftFirst',\r\n                    label: '1st (7a~3p)',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                shiftSecond: {\r\n                    name: 'shiftSecond',\r\n                    label: '2nd (3p~11p)',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                shiftThird: {\r\n                    name: 'shiftThird',\r\n                    label: '3rd (11p~7a)',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 4\r\n                },\r\n                weekends: {\r\n                    name: 'weekends',\r\n                    label: 'Are you available to work weekends?',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                overtime: {\r\n                    name: 'overtime',\r\n                    label: 'Will you work overtime, if required?',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"checkbox\",\r\n                    break: true,\r\n                    note: 'It is not necessary for you to identify unavailability for work because of religious observance or practice or any other protected classification. Subsequent to any job offer, we will consider whether a reasonable accommodation can be made.'\r\n                },\r\n                ableStartDate: {\r\n                    name: 'ableStartDate',\r\n                    label: 'When will you be able to start work?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"date\"\r\n                },\r\n                howLearnAboutCompany: {\r\n                    name: 'howLearnAboutCompany',\r\n                    label: 'How did you learn of the Company?',\r\n                    required: false,\r\n                    col: 8,\r\n                    type: \"text\"\r\n                },\r\n                everWorkedForCompany: {\r\n                    name: 'everWorkedForCompany',\r\n                    label: 'Have you ever applied or worked for the Company before?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                knowAnyoneWhoWorks: {\r\n                    name: 'knowAnyoneWhoWorks',\r\n                    label: 'Do you know anyone who works here?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                legallyAuthorized: {\r\n                    name: 'legallyAuthorized',\r\n                    label: 'Are you legally authorized to work in the United States?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                sponsorshipRequire: {\r\n                    name: 'sponsorshipRequire',\r\n                    label: 'Will you now or in the future require sponsorship for employment visa status (e.g.,H-1B visa status)?',\r\n                    required: false,\r\n                    col: 8,\r\n                    type: \"checkbox\",\r\n                    note: \"The Federal Immigration and Reform and Control Act of 1986 requires that a DHS Employment Eligibility Verification “Form I-9” be completed for every new hire and that within 3 business days of beginning work every new hire must present to the employer documentation establishing his/her identity and authorization to work. This federal requirement must be satisfied as a condition of employment.\",\r\n                    break: true\r\n                },\r\n            },\r\n            military: {\r\n                militaryServed: {\r\n                    name: 'militaryServed',\r\n                    label: 'Have you ever served in the military?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n            }\r\n        },\r\n        education: {\r\n            highSchool: {\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Name, City and State of Educational Institution',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                graduate: {\r\n                    name: 'graduate',\r\n                    label: 'Graduate',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                institution: {\r\n                    name: 'institution',\r\n                    label: 'Institution or Provider',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                license: {\r\n                    name: 'license',\r\n                    label: 'License or Certification Title',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 8\r\n                },\r\n            },\r\n            university: {\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Name, City and State of Educational Institution',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                graduate: {\r\n                    name: 'graduate',\r\n                    label: 'Graduate',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                institution: {\r\n                    name: 'institution',\r\n                    label: 'Institution or Provider',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                license: {\r\n                    name: 'license',\r\n                    label: 'License or Certification Title',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 8,\r\n                },\r\n            },\r\n            technical: {\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Name, City and State of Educational Institution',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                graduate: {\r\n                    name: 'graduate',\r\n                    label: 'Graduate',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                institution: {\r\n                    name: 'institution',\r\n                    label: 'Institution or Provider',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                license: {\r\n                    name: 'license',\r\n                    label: 'License or Certification Title',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 8\r\n                },\r\n            },\r\n            other: {\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Name, City and State of Educational Institution',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                graduate: {\r\n                    name: 'graduate',\r\n                    label: 'Graduate',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                institution: {\r\n                    name: 'institution',\r\n                    label: 'Institution or Provider',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                license: {\r\n                    name: 'license',\r\n                    label: 'License or Certification Title',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 8\r\n                },\r\n            }\r\n        },\r\n        employers: [\r\n            {\r\n                companyName: {\r\n                    name: 'companyName',\r\n                    label: 'Company Name',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 8,\r\n                    type: \"text\"\r\n                },\r\n                staffingAgency: {\r\n                    name: 'staffingAgency',\r\n                    label: 'Is this a Staffing Agency?',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Address',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                city: {\r\n                    name: 'city',\r\n                    label: 'City',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                state: {\r\n                    name: 'state',\r\n                    label: 'State',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                supervisorName: {\r\n                    name: 'supervisorName',\r\n                    label: 'Supervisor Name',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                companyPhone: {\r\n                    name: 'companyPhone',\r\n                    label: 'Company Phone',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    invalidErrorMsg: 'Incorrectly filled in.',\r\n                    col: 4,\r\n                    type: \"phone\"\r\n                },\r\n                mayWeContact: {\r\n                    name: 'mayWeContact',\r\n                    label: 'May we contact?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                dateEmployedFrom: {\r\n                    name: 'dateEmployedFrom',\r\n                    label: 'Date Employed From',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"date\"\r\n                },\r\n                dateEmployedTo: {\r\n                    name: 'dateEmployedTo',\r\n                    label: 'Date Employed To',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"date\"\r\n                },\r\n                lastWage: {\r\n                    name: 'lastWage',\r\n                    label: 'Last Wage',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                describeJob: {\r\n                    name: 'describeJob',\r\n                    label: 'Describe Job',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                reasonLeaving: {\r\n                    name: 'reasonLeaving',\r\n                    label: 'Reason for leaving',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 12,\r\n                    type: \"text\"\r\n                }\r\n            }\r\n        ],\r\n        references: [\r\n            {\r\n                name: {\r\n                    name: 'name',\r\n                    label: 'Name',\r\n                    required: false,\r\n                    col: 6,\r\n                    type: \"text\"\r\n                },\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Address',\r\n                    required: false,\r\n                    col: 6,\r\n                    type: \"text\"\r\n                },\r\n                phone: {\r\n                    name: 'phone',\r\n                    label: 'Phone',\r\n                    required: false,\r\n                    col: 6,\r\n                    type: \"phone\"\r\n                },\r\n                relationship: {\r\n                    name: 'relationship',\r\n                    label: 'Relationship',\r\n                    required: false,\r\n                    col: 6,\r\n                    type: \"text\"\r\n                },\r\n            }\r\n        ],\r\n        resume: {\r\n            name: 'resume',\r\n            label: 'Attach Resume',\r\n            required: false,\r\n            col: 12,\r\n            type: \"file\",\r\n            rows: 8\r\n        },\r\n        workHistory: {\r\n            name: 'workHistory',\r\n            label: 'Do you have any work history (count all temporary work, independent work etc.)?',\r\n            required: true,\r\n            col: 6,\r\n            type: \"checkbox\"\r\n        },\r\n        iAgree: {\r\n            name: 'iAgree',\r\n            label: ' I agree that I have read and understand this APPLICANT’S ACKNOWLEDGMENT',\r\n            required: true,\r\n            requiredErrorMsg: 'This is a required field.',\r\n            col: 6,\r\n            type: \"checkboxMini\"\r\n        }\r\n    }\r\n};\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormModel\\validationSchema.js",["208","209","210","211","212","213"],"import * as Yup from 'yup';\r\nimport checkoutFormModel from './formModel';\r\nconst {\r\n    formField: {\r\n        personalData: {\r\n            fullName,\r\n            email,\r\n            position,\r\n            positionDate,\r\n            salary,\r\n            lastNumSsn,\r\n            firstName,\r\n            middleName,\r\n            lastName,\r\n            street,\r\n            city,\r\n            state,\r\n            zip,\r\n            phone,\r\n            phoneOther,\r\n            age\r\n        },\r\n        workHistory,\r\n        employers: [{\r\n            companyName,\r\n            city: eCity,\r\n            state: eState,\r\n            supervisorName,\r\n            companyPhone,\r\n            dateEmployedFrom,\r\n            dateEmployedTo,\r\n            describeJob,\r\n            reasonLeaving\r\n        }],\r\n        iAgree\r\n    }\r\n} = checkoutFormModel;\r\n\r\nconst SUPPORTED_FORMATS = [\r\n    'application/pdf',\r\n    'image/png',\r\n    'image/jpeg',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'text/plain',\r\n    'application/vnd.oasis.opendocument.presentation',\r\n    'application/vnd.oasis.opendocument.spreadsheet',\r\n    'application/vnd.oasis.opendocument.text'\r\n];\r\nconst FILE_SIZE = 1024 * 1024;  // 1 Mb\r\n\r\nconst emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst phoneRegExp = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\r\nconst ssnRegExp = /^[0-9]{4}/;\r\n\r\nexport default [\r\n    Yup.object().shape({\r\n        personalData: Yup.object().shape({\r\n            [fullName.name]: Yup.string().required(`${fullName.requiredErrorMsg}`),\r\n            [email.name]: Yup.string()\r\n                .matches(emailRegEx, email.invalidErrorMsg)\r\n                .required(`${email.requiredErrorMsg}`)\r\n        })\r\n    }),\r\n    Yup.object().shape({\r\n        personalData: Yup.object().shape({\r\n            [position.name]: Yup.string().required(`${position.requiredErrorMsg}`),\r\n            [positionDate.name]: Yup.string().required(`${positionDate.requiredErrorMsg}`),\r\n            [salary.name]: Yup.string().required(`${salary.requiredErrorMsg}`),\r\n            [lastNumSsn.name]: Yup.string()\r\n                .matches(ssnRegExp, lastNumSsn.invalidErrorMsg)\r\n                .required(`${lastNumSsn.requiredErrorMsg}`),\r\n            [email.name]: Yup.string()\r\n                .matches(emailRegEx, email.invalidErrorMsg)\r\n                .required(`${email.requiredErrorMsg}`),\r\n            [firstName.name]: Yup.string().required(`${firstName.requiredErrorMsg}`),\r\n            [middleName.name]: Yup.string(),\r\n            [lastName.name]: Yup.string().required(`${lastName.requiredErrorMsg}`),\r\n            [street.name]: Yup.string().required(`${street.requiredErrorMsg}`),\r\n            [city.name]: Yup.string().required(`${city.requiredErrorMsg}`),\r\n            [state.name]: Yup.string().required(`${state.requiredErrorMsg}`),\r\n            [zip.name]: Yup.string().required(`${zip.requiredErrorMsg}`).test('age', 'Incorrectly filled in.', function(value) {\r\n                if (!!value || value === 0) {\r\n                    const schema = Yup.number().moreThan(0, 'Incorrectly filled in.');\r\n                    return schema.isValidSync(value);\r\n                }\r\n                return true;\r\n            }),\r\n            [phone.name]: Yup.string().matches(phoneRegExp, phone.invalidErrorMsg).required(`${phone.requiredErrorMsg}`),\r\n            [phoneOther.name]: Yup.string().matches(phoneRegExp, phone.invalidErrorMsg),\r\n            [age.name]: Yup.number().notRequired().test('age', 'Incorrectly filled in.', function(value) {\r\n                if (!!value || value === 0) {\r\n                    const schema = Yup.number().moreThan(0, 'Incorrectly filled in.');\r\n                    return schema.isValidSync(value);\r\n                }\r\n                return true;\r\n            }),\r\n        })\r\n    }),\r\n    null,\r\n    Yup.object().shape({\r\n        resume: Yup.mixed()\r\n            .test('fileSize', 'File Size is too large',\r\n            value => !value || value.size <= FILE_SIZE)\r\n            .test('fileType', 'Unsupported File Format',\r\n            value => !value || value && SUPPORTED_FORMATS.includes(value.type)),\r\n        [workHistory.name]: Yup.boolean(),\r\n        employers: Yup.array().when('workHistory', {\r\n            is: value => !!value,\r\n            then: Yup.array().of(Yup.object().shape({\r\n                [companyName.name]: Yup.string().required(`${companyName.requiredErrorMsg}`),\r\n                [eCity.name]: Yup.string().required(`${eCity.requiredErrorMsg}`),\r\n                [eState.name]: Yup.string().required(`${eState.requiredErrorMsg}`),\r\n                [supervisorName.name]: Yup.string().required(`${supervisorName.requiredErrorMsg}`),\r\n                [companyPhone.name]: Yup.string().matches(phoneRegExp, companyPhone.invalidErrorMsg).required(`${companyPhone.requiredErrorMsg}`),\r\n                [dateEmployedFrom.name]: Yup.date().max(new Date(), \"Future date not allowed.\")\r\n                    .required(`${dateEmployedFrom.requiredErrorMsg}`),\r\n                [dateEmployedTo.name]: Yup.date()\r\n                    .when(\r\n                        \"dateEmployedFrom\",\r\n                        (eventStartDate, schema) => eventStartDate && schema.min(eventStartDate, \"Can't be before employed.\"))\r\n                    .required(`${dateEmployedTo.requiredErrorMsg}`),\r\n                [describeJob.name]: Yup.string().required(`${describeJob.requiredErrorMsg}`),\r\n                [reasonLeaving.name]: Yup.string().required(`${reasonLeaving.requiredErrorMsg}`),\r\n            }))\r\n        })\r\n    }),\r\n    Yup.object().shape({\r\n        [iAgree.name]: Yup.boolean().oneOf([true], `${iAgree.requiredErrorMsg}`),\r\n    })\r\n];\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\FormikOnError.jsx",["214"],"import { useEffect, useState } from 'react';\r\nimport isObject from 'lodash/isObject';\r\nimport { useFormikContext } from 'formik';\r\n\r\nconst getFirstErrorKey = (object, keys = []) => {\r\n    const firstErrorKey = Object.keys(object)[0];\r\n    if (isObject(object[firstErrorKey])) {\r\n        return getFirstErrorKey(object[firstErrorKey], [...keys, firstErrorKey]);\r\n    }\r\n    return [...keys, firstErrorKey].join('.');\r\n};\r\n\r\nconst FormikOnError = ({ children }) => {\r\n    const formik = useFormikContext();\r\n    const [submitCount, setSubmitCount] = useState(formik.submitCount)\r\n\r\n    useEffect(() => {\r\n        if (!formik.isValid && formik.submitCount > submitCount && formik.isSubmitting) {\r\n            const firstErrorKey = getFirstErrorKey(formik.errors);\r\n            if (global.window.document.getElementsByName(firstErrorKey).length) {\r\n                if(global.window.document.getElementsByName(firstErrorKey)[0].disabled) {\r\n                    global.window.document.getElementsByName(firstErrorKey)[0].scrollIntoView({block: \"center\", inline: \"center\"});\r\n                }\r\n                global.window.document.getElementsByName(firstErrorKey)[0].focus();\r\n            }\r\n            setSubmitCount(formik.submitCount)\r\n        }\r\n    }, [formik.submitCount, formik.isValid, formik.errors]);\r\n    return children;\r\n};\r\n\r\nexport default FormikOnError;","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Disclaimer.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education.jsx",["215","216","217","218"],"import React, { useRef } from 'react';\r\nimport Education_01 from \"./Education_01\";\r\nimport Education_02 from \"./Education_02\";\r\nimport Education_03 from \"./Education_03\";\r\nimport Education_04 from \"./Education_04\";\r\nimport SubmitBtn from \"../../components/SubmitBtn\";\r\nimport {useBlockScroll, useCalculateHeight} from \"../../utils/useWindowDimensions\";\r\n\r\nconst Education = ({ btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, ...props}) => {\r\n    const elRef = useRef();\r\n    useBlockScroll(elRef);\r\n    useCalculateHeight();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div ref={elRef} className=\"form_sub_education\">\r\n                <div className=\"form_sub__center\">\r\n                    <Education_01 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <Education_02 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <Education_03 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <Education_04 {...props} />\r\n                </div>\r\n\r\n                <SubmitBtn\r\n                    onClick={clickSubmitBtn}\r\n                    isSubmitting={isSubmitting}\r\n                    btnNext={btnNext} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Education;","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\PersonalData\\PersonalData.jsx",["219","220","221"],"import React, { useRef } from 'react';\r\nimport PersonalData_01 from './PersonalData_01';\r\nimport PersonalData_02 from './PersonalData_02';\r\nimport PersonalData_03 from './PersonalData_03';\r\nimport SubmitBtn from \"../../components/SubmitBtn\";\r\nimport {useBlockScroll, useCalculateHeight} from \"../../utils/useWindowDimensions\";\r\n\r\nconst PersonalData = ({ btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, ...props}) => {\r\n    const elRef = useRef();\r\n    useBlockScroll(elRef);\r\n    useCalculateHeight();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div ref={elRef} className=\"form_sub_personal-data\">\r\n                <div className=\"form_sub__center\">\r\n                    <PersonalData_01 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <PersonalData_02 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <PersonalData_03 {...props} />\r\n                </div>\r\n\r\n                <SubmitBtn\r\n                    onClick={clickSubmitBtn}\r\n                    isSubmitting={isSubmitting}\r\n                    btnNext={btnNext} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PersonalData;","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\EmploymentHistory.jsx",["222","223","224"],"import React, { useRef } from 'react';\r\nimport EmploymentHistory_01 from \"./EmploymentHistory_01\";\r\nimport EmploymentHistory_02 from \"./EmploymentHistory_02\";\r\nimport EmploymentHistory_00 from \"./EmploymentHistory_00\";\r\nimport SubmitBtn from \"../../components/SubmitBtn\";\r\nimport {useBlockScroll, useCalculateHeight} from \"../../utils/useWindowDimensions\";\r\n\r\nconst EmploymentHistory = ({\r\n    btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, ...props}) => {\r\n    const elRef = useRef();\r\n    useBlockScroll(elRef);\r\n    useCalculateHeight();\r\n    const workHistory = props?.values?.workHistory || false;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div ref={elRef} className=\"form_sub_employment\">\r\n                <div className=\"form_sub__center\">\r\n                    <EmploymentHistory_00 {...props} />\r\n                    {workHistory && <EmploymentHistory_01 {...props} />}\r\n                    <EmploymentHistory_02 {...props} />\r\n                </div>\r\n\r\n                <SubmitBtn\r\n                    onClick={clickSubmitBtn}\r\n                    isSubmitting={isSubmitting}\r\n                    btnNext={btnNext} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EmploymentHistory;","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\Stepper\\AlbaStepIcon.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\theme\\typography.js",["225"],"import { createMuiTheme } from '@material-ui/core';\r\nconst theme = createMuiTheme();\r\n\r\nexport default {\r\n  body1: {\r\n    color: 'rgba(255, 255, 255, .8)',\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    letterSpacing: \"0.03em\",\r\n    fontFamily: \"'Clear Sans', sans-serif\",\r\n    fontWeight: 300,\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: \"18px\",\r\n      lineHeight: \"27px\",\r\n    },\r\n  },\r\n  h1: {\r\n    fontWeight: 700,\r\n    fontSize: \"30px\",\r\n    lineHeight: \"30px\",\r\n    textTransform: \"uppercase\",\r\n    marginBottom: \"20px !important\",\r\n    fontFamily: \"'Exo 2', sans-serif\",\r\n    [theme.breakpoints.up('sm')]: {\r\n      fontSize: \"40px\",\r\n      lineHeight: \"36px\",\r\n      marginBottom: \"20px !important\",\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: \"60px\",\r\n      lineHeight: \"60px\",\r\n      marginBottom: \"30px !important\",\r\n    },\r\n  },\r\n  h2: {\r\n    fontWeight: 700,\r\n    fontSize: \"24px \",\r\n    lineHeight: \"24px\",\r\n    textTransform: 'uppercase',\r\n    marginBottom: \"20px !important\",\r\n    fontFamily: \"'Exo 2', sans-serif\",\r\n    [theme.breakpoints.up('sm')]: {\r\n      fontSize: \"28px \",\r\n      lineHeight: \"28px \",\r\n      marginBottom: \"30px !important\",\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: \"30px \",\r\n      lineHeight: \"30px \",\r\n    },\r\n  },\r\n  h3: {\r\n    fontWeight: 700,\r\n    fontSize: \"18px \",\r\n    lineHeight: \"18px\",\r\n    textTransform: 'uppercase',\r\n    fontFamily: \"'Exo 2', sans-serif\",\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: \"20px \",\r\n      lineHeight: \"34px\",\r\n    },\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\ThankYou.jsx",["226"],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Introduction.jsx",["227"],"import React, {useState} from \"react\";\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { InputField } from '../components/FormFields';\r\nimport SubmitBtn from \"../components/SubmitBtn\";\r\nimport {SlideDown} from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\nimport clsx from \"clsx\";\r\nimport {useCalculateHeight} from \"../utils/useWindowDimensions\";\r\n\r\nconst Introduction = ({ formField: { personalData  }, btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, setForm, ...rest}) => {\r\n    const {\r\n        fullName,\r\n        email\r\n    } = personalData;\r\n    const [visible, setVisible] = useState(false);\r\n    useCalculateHeight();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"form_sub__wrap form_sub_introduction__spacing\">\r\n                <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub form_sub_introduction__wrap\">\r\n                    <Grid item xs={12} lg={6} className=\"form_sub_introduction_left py-0\">\r\n                        <Typography variant=\"h1\" gutterBottom>\r\n                            Introduction\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" gutterBottom className=\"introduction__text\">\r\n                            <span className={clsx(!visible&&\"short-text\")}>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop.\r\n                            </span>\r\n                            <SlideDown className={'dropdown-slidedown'}>\r\n                                { visible ? <span>\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop\r\n                                  </span>\r\n                                    : null }\r\n                            </SlideDown>\r\n                            <span className=\"form_sub_introduction__expand\" onClick={() => setVisible(!visible)}>{visible ? 'Show Less' : 'Read More'}</span>\r\n                        </Typography>\r\n                        <div className=\"form_sub_introduction__company\">\r\n                            <Typography variant=\"h3\" gutterBottom>\r\n                                Company\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" gutterBottom className=\"form_sub_introduction__company__text\">\r\n                                <a target=\"_blank\" href=\"https://goo.gl/maps/UWEy1qC9QHLq5G2j6\">Lorem Ipsum, 895623</a>\r\n                            </Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <div className=\"vertical-line\" />\r\n                    <Grid item xs={12} lg={6} className=\"form_sub_introduction py-0\">\r\n                        <InputField name=\"personalData.fullName\" label={fullName.label} required={fullName.required} fullWidth />\r\n                        <InputField name=\"personalData.email\" label={email.label} required={email.required} fullWidth />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n            <SubmitBtn\r\n                onClick={clickSubmitBtn}\r\n                isSubmitting={isSubmitting}\r\n                btnNext={btnNext} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Introduction;\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\utils\\index.js",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\SubmitBtn.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\EmploymentHistory_00.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\EmploymentHistory_01.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\EmploymentHistory_02.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\PersonalData\\PersonalData_03.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\PersonalData\\PersonalData_01.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\PersonalData\\PersonalData_02.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education_03.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education_04.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education_02.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\Education\\Education_01.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\index.js",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\views\\EmploymentHistory\\ProfessionalReferencesTwin.jsx",["228"],"import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport {\r\n    CheckboxField,\r\n    DatePickerField,\r\n    InputField,\r\n    InputFieldPhone,\r\n    MultilineTextField\r\n} from \"../../components/FormFields\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst ProfessionalReferencesTwin = ({ fields, index, double, arrayHelpers }) => {\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n    return (\r\n        <Grid container direction=\"row\" spacing={isMobile?1:3} className={clsx(double&&\"double\", \"form_sub_references\")}>\r\n            {index !== 0 &&(\r\n                <div\r\n                    onClick={() => arrayHelpers.remove(index)}\r\n                    className=\"fr-btn fr-btn-close fr-btn-dark\">\r\n                    <span className=\"close-icon\"></span>\r\n                </div>\r\n            )}\r\n            {fields.map((field, i) => {\r\n                if(field.type === \"checkbox\") {\r\n                    return (\r\n                        <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                            <CheckboxField\r\n                                name={`references.${index}.${field.name}`}\r\n                                label={field.label}\r\n                                required={field.required}\r\n                                fullWidth\r\n                            />\r\n                        </Grid>)\r\n\r\n                }\r\n                if(field.type === \"textarea\") {\r\n                    return (\r\n                        <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                            <MultilineTextField\r\n                                name={`references.${index}.${field.name}`}\r\n                                label={field.label}\r\n                                required={field.required}\r\n                                rowsMax={field.rows}\r\n                                rows={field.rows}\r\n                                fullWidth/>\r\n                        </Grid>\r\n                    )\r\n                }\r\n                if(field.type === \"date\") {\r\n                    return (\r\n                        <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                            <DatePickerField\r\n                                name={`references.${index}.${field.name}`}\r\n                                label={field.label}\r\n                                required={field.required}\r\n                                fullWidth/>\r\n                        </Grid>\r\n                    )\r\n                }\r\n                if(field.type === \"phone\") {\r\n                    return (\r\n                        <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                            <InputFieldPhone\r\n                                name={`references.${index}.${field.name}`}\r\n                                label={field.label}\r\n                                required={field.required}\r\n                                fullWidth/>\r\n                        </Grid>\r\n                    )\r\n                }\r\n                return (\r\n                    <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                        <InputField\r\n                            name={`references.${index}.${field.name}`}\r\n                            label={field.label}\r\n                            required={field.required}\r\n                            fullWidth/>\r\n                    </Grid>\r\n                )\r\n            })}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ProfessionalReferencesTwin;","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputFieldNum.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputField.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\CheckboxMiniField.jsx",["229"],"import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText, InputLabel\r\n} from '@material-ui/core';\r\nimport clsx from \"clsx\";\r\n\r\nexport default function CheckboxMiniField(props) {\r\n    const { label, value, ...rest } = props;\r\n    const [field, meta, helper] = useField(props);\r\n    const { setValue } = helper;\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n    const isError = touched && error && true;\r\n\r\n    function _renderHelperText() {\r\n        if (isError) {\r\n            return <span className=\"MuiFormHelperText-root Mui-error Mui-required\">{error}</span>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control form__checkbox__mini__control\">\r\n            <FormControl {...rest} error={isError} className=\"form__checkbox__mini__wrap\">\r\n                <FormControlLabel\r\n                    value={field.value}\r\n                    checked={field.value}\r\n                    className=\"form__checkbox__mini\"\r\n                    control={\r\n                        <>\r\n                            <Checkbox {...field} className={clsx(\"form__checkbox__input\", field.value && \"checked\")} onChange={() => setValue(!value)} />\r\n                            <span className={clsx(\"form__checkbox__mini__check\", field.value && \"checked\")}/>\r\n                        </>\r\n                    }\r\n                    label=\"\"\r\n                />\r\n            </FormControl>\r\n            <InputLabel\r\n                className=\"form__label form__checkbox__mini__label\"\r\n                onClick={() => setValue(!value)}\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            {_renderHelperText()}\r\n        </div>\r\n    );\r\n}\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputFieldSsn.jsx",["230"],"import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {TextField, InputLabel, FormHelperText} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MaskedInput from 'react-text-mask';\r\nimport theme from \"../../theme\";\r\n\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'green',\r\n        },\r\n        '& .MuiInputBase-input': {\r\n            color: \"rgba(255, 255, 255, .6)\",\r\n            padding: \"0 20px\",\r\n            lineHeight: \"44px\",\r\n            height: \"44px\",\r\n            fontSize: \"16px\",\r\n            fontFamily: \"'Exo 2', sans-serif\",\r\n            [theme.breakpoints.up('lg')]: {\r\n                fontSize: \"18px\",\r\n                lineHeight: \"54px\",\r\n                height: \"54px\",\r\n            },\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            borderRadius: 0,\r\n            backgroundColor: \"697d99\",\r\n\r\n            '& fieldset': {\r\n                transition: \"all .5s\",\r\n                borderColor: 'rgba(255, 255, 255, 0.1)',\r\n                borderWidth: 1,\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                borderWidth: 1,\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                borderWidth: 1,\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst TextMaskCustom = (props) => {\r\n    const { ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            mask={[/\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask={false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function InputFieldPhone(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n\r\n    function _renderHelperText() {\r\n        if (touched && error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <CssTextField\r\n                type=\"text\"\r\n                error={meta.touched && meta.error && true}\r\n                helperText={_renderHelperText()}\r\n                variant=\"outlined\"\r\n                {...field}\r\n                {...rest}\r\n                label=\"\"\r\n                InputProps={{\r\n                    inputComponent: TextMaskCustom,\r\n                    value: field.value,\r\n                    onChange: field.onChange,\r\n                    onBlur: field.onBlur,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputFileUpload.jsx",["231"],"import React from 'react';\r\nimport {FormHelperText, Input, InputLabel} from '@material-ui/core';\r\nimport {at} from \"lodash\";\r\nimport {useField} from \"formik\";\r\n\r\nexport default function InputFileUpload({ value , ...props}) {\r\n    const [field, meta, helper] = useField(props.field);\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n    const isError = touched && error && true;\r\n\r\n    function _renderHelperText() {\r\n        if (isError) {\r\n            return <FormHelperText className=\"MuiFormHelperText-root Mui-error Mui-required\">{error}</FormHelperText>;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"form__control form__control_file\">\r\n            <InputLabel\r\n                className=\"form__label form_sub_employment__input_file__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <span className=\"form_sub_employment__input_file__name\">{value ? value.name : \"The file is not selected\"}</span>\r\n            <InputLabel\r\n                className=\"form_sub_employment__input_file__add\"\r\n                required={props.required}>\r\n                {!value && \"Attach Resume\"}\r\n\r\n                <Input\r\n                    className=\"form_sub_employment__input_file\"\r\n                    error={meta.touched && meta.error && true}\r\n                    inputProps={{\r\n                        type: 'file',\r\n                        disabled: props.disabled || props.form.isSubmitting,\r\n                        name: field.name,\r\n                        onChange: (event) => {\r\n                            const file = event.currentTarget.files[0];\r\n                            props.form.setFieldValue(field.name, file);\r\n                        },\r\n                    }}\r\n                />\r\n            </InputLabel>\r\n\r\n            {value && (\r\n                <span\r\n                    className=\"form_sub_employment__input_file__delete\"\r\n                    onClick={() => props.form.setFieldValue(props.field.name, null)}>\r\n                    Delete Resume\r\n                </span>\r\n            )}\r\n            {_renderHelperText()}\r\n        </div>\r\n    );\r\n}\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\MultilineTextField.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\SelectField.jsx",["232"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormHelperText,\r\n    FormControl,\r\n    InputBase\r\n} from '@material-ui/core';\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport theme from \"../../theme\";\r\n\r\nconst useStyles = makeStyles({\r\n    icon: {\r\n        position: \"absolute\",\r\n        right: \"20px\",\r\n        top: 0,\r\n        lineHeight: \"40px\",\r\n        [theme.breakpoints.up('lg')]: {\r\n            lineHeight: \"50px\",\r\n        },\r\n        '&.MuiSelect-iconOpen': {\r\n            top: \"5px\",\r\n            opacity: 1,\r\n        }\r\n    },\r\n    selectMenu: {\r\n        padding: \"0 20px\",\r\n        color: \"rgba(255, 255, 255, .6)\",\r\n        lineHeight: \"47px\",\r\n        height: \"37px\",\r\n        fontFamily: \"'Exo 2', sans-serif\",\r\n        [theme.breakpoints.up('lg')]: {\r\n            lineHeight: \"47px\",\r\n            height: \"47px\",\r\n        },\r\n        borderBottom: \"1px solid rgba(255, 255, 255, .05)\",\r\n        backgroundColor: \"697d99\",\r\n\r\n        '&:last-child': {\r\n            borderBottom: 'none'\r\n        },\r\n        '&.Mui-selected': {\r\n            color: \"#fff\",\r\n            background: \"rgba(255, 255, 255, .05)\"\r\n        },\r\n        \"&:hover\": {\r\n            background: \"rgba(255, 255, 255, .05)\",\r\n        },\r\n    }\r\n});\r\n\r\nconst CssTextField = withStyles((theme) => ({\r\n    input: {\r\n        color: \"rgba(255, 255, 255, .6)\",\r\n        lineHeight: \"42px\",\r\n        height: \"44px\",\r\n        fontSize: \"16px\",\r\n        [theme.breakpoints.up('lg')]: {\r\n            fontSize: \"18px\",\r\n            lineHeight: \"52px\",\r\n            height: \"54px\",\r\n        },\r\n        padding: \"0 20px\",\r\n        borderRadius: 0,\r\n        position: 'relative',\r\n        backgroundColor: \"697d99\",\r\n        border: '1px solid rgba(255, 255, 255, 0.1)',\r\n        boxSizing: \"border-box\",\r\n        transition: \"all .5s\",\r\n        '&:hover, &:focus': {\r\n            border: '1px solid rgba(255, 255, 255, 0.3)',\r\n        },\r\n    }\r\n}))(InputBase);\r\n\r\nfunction SelectField(props) {\r\n    const classes = useStyles();\r\n    const { label, data, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n    const { value: selectedValue } = field;\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n    const isError = touched && error && true;\r\n\r\n    function _renderHelperText() {\r\n        if (isError) {\r\n            return <FormHelperText>{error}</FormHelperText>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <FormControl className=\"form__select__wrap\" fullWidth error={isError}>\r\n                <Select {...field}\r\n                    value={selectedValue ? selectedValue : ''}\r\n                    input={<CssTextField label=\"\" />}\r\n                    displayEmpty\r\n                    IconComponent={props => (\r\n                        <div className={clsx(classes.icon, props.className)}>\r\n                            <span className=\"alba-icon__arrow\"/>\r\n                        </div>\r\n                    )}\r\n                    inputProps={{\r\n                        className: clsx(isError && \"form__input__error\")\r\n                    }}\r\n                    MenuProps={{\r\n                        anchorOrigin: {\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                    }}\r\n                >\r\n                    {data.map((item, index) => (\r\n                        <MenuItem disabled={item.disabled}  className={classes.selectMenu} key={index} value={item.value}>\r\n                            <span className={clsx(!item.value&&\"empty-value\")}>{item.label}</span>\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {_renderHelperText()}\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nSelectField.defaultProps = {\r\n    data: []\r\n};\r\n\r\nSelectField.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SelectField;\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\DatePickerField.jsx",["233","234","235","236","237","238"],"import React, { useState, useEffect } from 'react';\r\nimport { useField } from 'formik';\r\nimport {InputLabel, Popover} from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport StaticPickers from \"../StaticPickers\";\r\nimport clsx from \"clsx\";\r\n\r\nexport default function DatePickerField(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta, helper] = useField(props);\r\n    const { touched, error } = meta;\r\n    const { setValue } = helper;\r\n    const isError = touched && error && true;\r\n    const { value } = field;\r\n    const initialDate = new Date();\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [year, setYear] = useState(null);\r\n    const [month, setMonth] = useState(null);\r\n    const [calendar, toggleCalendar] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const _onChangeYear = (page) => {\r\n        const currentDate= selectedDate || initialDate;\r\n        const [month, date, year] = currentDate.toLocaleDateString(\"en-US\").split(\"/\");\r\n        const newDate = new Date(page, month-1, date);\r\n        setSelectedDate(newDate);\r\n        setYear(page);\r\n    }\r\n\r\n    const _onChangeMonth = (page) => {\r\n        const currentDate= selectedDate || initialDate;\r\n        const [month, date, year] = currentDate.toLocaleDateString(\"en-US\").split(\"/\");\r\n        const newDate = new Date(year, page, date);\r\n        setSelectedDate(newDate);\r\n        setMonth(page);\r\n    }\r\n\r\n    function _onChange(date) {\r\n        if (date) {\r\n            setSelectedDate(date);\r\n            try {\r\n                const ISODateString = date.toISOString();\r\n                setValue(ISODateString);\r\n            } catch (error) {\r\n                setValue(date);\r\n            }\r\n        } else {\r\n            setValue(date);\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            const date = new Date(value);\r\n            const [_month, _date, _year] = date.toLocaleDateString(\"en-US\").split(\"/\");\r\n            setSelectedDate(date);\r\n            setYear(_year);\r\n            setMonth(_month);\r\n        } else {\r\n            const [_month, _date, _year] = initialDate.toLocaleDateString(\"en-US\").split(\"/\");\r\n            setYear(_year);\r\n            setMonth(_month);\r\n        }\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if(!value && open) {\r\n            setSelectedDate(initialDate);\r\n            setValue(initialDate);\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <div aria-describedby={id} className=\"form__control__icon-wrap\" onClick={handleClick}>\r\n                <span className={clsx(open&&\"open\",\"form__picker__icon\")}/>\r\n                <KeyboardDatePicker\r\n                    {...field}\r\n                    {...rest}\r\n                    {...props}\r\n                    className=\"form__picker__input\"\r\n                    open={false}\r\n                    value={selectedDate}\r\n                    onOpen={() => toggleCalendar(!calendar)}\r\n                    onChange={_onChange}\r\n                    error={isError}\r\n                    invalidDateMessage={isError && error}\r\n                    helperText={isError && error}\r\n                    variant=\"outlined\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    allowKeyboardControl={false}\r\n                    label=\"\"\r\n                    disabled\r\n                />\r\n            </div>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                className=\"form__picker__popover\"\r\n            >\r\n                <StaticPickers\r\n                    toggleCalendar={handleClose}\r\n                    year={parseInt(year)}\r\n                    month={parseInt(month)}\r\n                    onChangeYear={_onChangeYear}\r\n                    onChangeMonth={_onChangeMonth}\r\n                    onChange={_onChange}\r\n                    selectedDate={selectedDate}\r\n                    calendar={calendar}\r\n                />\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\InputFieldPhone.jsx",["239"],"import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {TextField, InputLabel, FormHelperText} from '@material-ui/core';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport MaskedInput from 'react-text-mask';\r\nimport theme from \"../../theme\";\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            color: \"rgba(255, 255, 255, .6)\",\r\n            padding: \"0 20px\",\r\n            lineHeight: \"44px\",\r\n            height: \"44px\",\r\n            fontSize: \"16px\",\r\n            fontFamily: \"'Exo 2', sans-serif\",\r\n            [theme.breakpoints.up('lg')]: {\r\n                fontSize: \"18px\",\r\n                lineHeight: \"54px\",\r\n                height: \"54px\",\r\n            },\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            borderRadius: 0,\r\n            backgroundColor: \"697d99\",\r\n\r\n            '& fieldset': {\r\n                transition: \"all .5s\",\r\n                borderColor: 'rgba(255, 255, 255, 0.1)',\r\n                borderWidth: 1,\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                borderWidth: 1,\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                borderWidth: 1,\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst TextMaskCustom = (props) => {\r\n    const { ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask={false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function InputFieldPhone(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n\r\n    function _renderHelperText() {\r\n        if (touched && error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <CssTextField\r\n                type=\"text\"\r\n                error={meta.touched && meta.error && true}\r\n                helperText={_renderHelperText()}\r\n                variant=\"outlined\"\r\n                {...field}\r\n                {...rest}\r\n                label=\"\"\r\n                InputProps={{\r\n                    inputComponent: TextMaskCustom,\r\n                    value: field.value,\r\n                    onChange: field.onChange,\r\n                    onBlur: field.onBlur,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\FormFields\\CheckboxField.jsx",[],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\theme\\shadows.js",["240"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n",["241","242"],"C:\\OpenServer\\domains\\harbinger-albaform-form-plugin\\wp-content\\plugins\\react-app-form\\app\\src\\components\\StaticPickers.jsx",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":14,"column":10,"nodeType":"249","messageId":"250","endLine":14,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":118,"column":8,"nodeType":"253","endLine":118,"endColumn":19,"suggestions":"254"},{"ruleId":"247","severity":1,"message":"255","line":27,"column":13,"nodeType":"249","messageId":"250","endLine":27,"endColumn":19},{"ruleId":"247","severity":1,"message":"256","line":30,"column":11,"nodeType":"249","messageId":"250","endLine":30,"endColumn":18},{"ruleId":"251","severity":1,"message":"257","line":82,"column":8,"nodeType":"253","endLine":82,"endColumn":15,"suggestions":"258"},{"ruleId":"247","severity":1,"message":"255","line":88,"column":13,"nodeType":"249","messageId":"250","endLine":88,"endColumn":19},{"ruleId":"251","severity":1,"message":"257","line":114,"column":8,"nodeType":"253","endLine":114,"endColumn":15,"suggestions":"259"},{"ruleId":"247","severity":1,"message":"260","line":120,"column":20,"nodeType":"249","messageId":"250","endLine":120,"endColumn":29},{"ruleId":"247","severity":1,"message":"260","line":155,"column":20,"nodeType":"249","messageId":"250","endLine":155,"endColumn":29},{"ruleId":"261","severity":1,"message":"262","line":50,"column":1,"nodeType":"263","endLine":144,"endColumn":3},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","endLine":544,"endColumn":3},{"ruleId":"264","severity":1,"message":"265","line":53,"column":24,"nodeType":"266","messageId":"267","endLine":53,"endColumn":25,"suggestions":"268"},{"ruleId":"264","severity":1,"message":"269","line":53,"column":48,"nodeType":"266","messageId":"267","endLine":53,"endColumn":49,"suggestions":"270"},{"ruleId":"264","severity":1,"message":"269","line":53,"column":64,"nodeType":"266","messageId":"267","endLine":53,"endColumn":65,"suggestions":"271"},{"ruleId":"261","severity":1,"message":"272","line":56,"column":1,"nodeType":"263","endLine":131,"endColumn":3},{"ruleId":"273","severity":1,"message":"274","line":106,"column":29,"nodeType":"275","messageId":"276","endLine":106,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":106,"column":38,"nodeType":"275","messageId":"276","endLine":106,"endColumn":40},{"ruleId":"251","severity":1,"message":"277","line":28,"column":8,"nodeType":"253","endLine":28,"endColumn":59,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":18,"column":21,"nodeType":"281","endLine":18,"endColumn":48},{"ruleId":"279","severity":1,"message":"282","line":20,"column":21,"nodeType":"281","endLine":20,"endColumn":48},{"ruleId":"279","severity":1,"message":"283","line":22,"column":21,"nodeType":"281","endLine":22,"endColumn":48},{"ruleId":"279","severity":1,"message":"284","line":24,"column":21,"nodeType":"281","endLine":24,"endColumn":48},{"ruleId":"279","severity":1,"message":"285","line":17,"column":21,"nodeType":"281","endLine":17,"endColumn":51},{"ruleId":"279","severity":1,"message":"286","line":19,"column":21,"nodeType":"281","endLine":19,"endColumn":51},{"ruleId":"279","severity":1,"message":"287","line":21,"column":21,"nodeType":"281","endLine":21,"endColumn":51},{"ruleId":"279","severity":1,"message":"288","line":19,"column":21,"nodeType":"281","endLine":19,"endColumn":56},{"ruleId":"279","severity":1,"message":"289","line":20,"column":37,"nodeType":"281","endLine":20,"endColumn":72},{"ruleId":"279","severity":1,"message":"290","line":21,"column":21,"nodeType":"281","endLine":21,"endColumn":56},{"ruleId":"261","severity":1,"message":"262","line":4,"column":1,"nodeType":"263","endLine":81,"endColumn":3},{"ruleId":"247","severity":1,"message":"291","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":15},{"ruleId":"292","severity":1,"message":"293","line":43,"column":36,"nodeType":"294","endLine":43,"endColumn":51},{"ruleId":"247","severity":1,"message":"295","line":2,"column":15,"nodeType":"249","messageId":"250","endLine":2,"endColumn":25},{"ruleId":"247","severity":1,"message":"296","line":8,"column":5,"nodeType":"249","messageId":"250","endLine":8,"endColumn":19},{"ruleId":"247","severity":1,"message":"296","line":4,"column":32,"nodeType":"249","messageId":"250","endLine":4,"endColumn":46},{"ruleId":"247","severity":1,"message":"297","line":7,"column":25,"nodeType":"249","messageId":"250","endLine":7,"endColumn":31},{"ruleId":"247","severity":1,"message":"298","line":83,"column":29,"nodeType":"249","messageId":"250","endLine":83,"endColumn":33},{"ruleId":"247","severity":1,"message":"299","line":27,"column":29,"nodeType":"249","messageId":"250","endLine":27,"endColumn":33},{"ruleId":"247","severity":1,"message":"300","line":35,"column":16,"nodeType":"249","messageId":"250","endLine":35,"endColumn":21},{"ruleId":"247","severity":1,"message":"301","line":67,"column":28,"nodeType":"249","messageId":"250","endLine":67,"endColumn":33},{"ruleId":"247","severity":1,"message":"301","line":72,"column":28,"nodeType":"249","messageId":"250","endLine":72,"endColumn":33},{"ruleId":"251","severity":1,"message":"302","line":76,"column":8,"nodeType":"253","endLine":76,"endColumn":15,"suggestions":"303"},{"ruleId":"251","severity":1,"message":"304","line":83,"column":8,"nodeType":"253","endLine":83,"endColumn":14,"suggestions":"305"},{"ruleId":"247","severity":1,"message":"296","line":4,"column":32,"nodeType":"249","messageId":"250","endLine":4,"endColumn":46},{"ruleId":"261","severity":1,"message":"272","line":1,"column":1,"nodeType":"263","endLine":27,"endColumn":3},{"ruleId":"243","replacedBy":"306"},{"ruleId":"245","replacedBy":"307"},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"no-unused-vars","'addPost' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.","ArrayExpression",["310"],"'height' is assigned a value but never used.","'isHover' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'elRef'. Either include it or remove the dependency array.",["311"],["312"],"'setHeight' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["313","314"],"Unnecessary escape character: \\..",["315","316"],["317","318"],"Assign array to a variable before exporting as module default","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'formik.isSubmitting' and 'submitCount'. Either include them or remove the dependency array.",["319"],"react/jsx-pascal-case","Imported JSX component Education_01 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Education_02 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Education_03 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Education_04 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component PersonalData_01 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component PersonalData_02 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component PersonalData_03 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component EmploymentHistory_00 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component EmploymentHistory_01 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component EmploymentHistory_02 must be in PascalCase or SCREAMING_SNAKE_CASE","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Typography' is defined but never used.","'FormHelperText' is defined but never used.","'helper' is assigned a value but never used.","'rest' is assigned a value but never used.","'year' is assigned a value but never used.","'month' is assigned a value but never used.","'_date' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialDate'. Either include it or remove the dependency array.",["320"],"React Hook useEffect has missing dependencies: 'initialDate', 'setValue', and 'value'. Either include them or remove the dependency array.",["321"],["308"],["309"],"no-global-assign","no-unsafe-negation",{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"324","fix":"326"},{"messageId":"327","fix":"328","desc":"329"},{"messageId":"330","fix":"331","desc":"332"},{"messageId":"327","fix":"333","desc":"329"},{"messageId":"330","fix":"334","desc":"332"},{"messageId":"327","fix":"335","desc":"329"},{"messageId":"330","fix":"336","desc":"332"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"Update the dependencies array to be: [stepIndex, width]",{"range":"343","text":"344"},"Update the dependencies array to be: [elRef, width]",{"range":"345","text":"346"},{"range":"347","text":"346"},"removeEscape",{"range":"348","text":"349"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"350","text":"351"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"352","text":"349"},{"range":"353","text":"351"},{"range":"354","text":"349"},{"range":"355","text":"351"},"Update the dependencies array to be: [formik.submitCount, formik.isValid, formik.errors, formik.isSubmitting, submitCount]",{"range":"356","text":"357"},"Update the dependencies array to be: [initialDate, value]",{"range":"358","text":"359"},"Update the dependencies array to be: [initialDate, open, setValue, value]",{"range":"360","text":"361"},[5028,5039],"[stepIndex, width]",[2762,2769],"[elRef, width]",[3788,3795],[1463,1464],"",[1463,1463],"\\",[1487,1488],[1487,1487],[1503,1504],[1503,1503],[1254,1305],"[formik.submitCount, formik.isValid, formik.errors, formik.isSubmitting, submitCount]",[2569,2576],"[initialDate, value]",[2732,2738],"[initialDate, open, setValue, value]"]