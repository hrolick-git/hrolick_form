{"version":3,"sources":["views/FormikOnError.jsx","components/FormModel/formModel.js","components/FormModel/formInitialValues.js","components/FormModel/validationSchema.js","theme/typography.js","theme/index.js","theme/shadows.js","components/FormFields/InputField.jsx","components/FormFields/InputFieldPhone.jsx","components/FormFields/CheckboxField.jsx","components/FormFields/SelectField.jsx","components/StaticPickers.jsx","components/FormFields/DatePickerField.jsx","components/FormFields/MultilineTextField.jsx","components/FormFields/InputFileUpload.jsx","components/FormFields/InputFieldSsn.jsx","components/FormFields/CheckboxMiniField.jsx","components/SubmitBtn.jsx","utils/useWindowDimensions.js","views/Introduction.jsx","components/Stepper/AlbaStepIcon.jsx","components/FormFields/InputFieldNum.jsx","views/PersonalData/PersonalData_01.jsx","views/PersonalData/PersonalData_02.jsx","views/PersonalData/PersonalData_03.jsx","views/PersonalData/PersonalData.jsx","views/Education/Education_01.jsx","views/Education/Education_02.jsx","views/Education/Education_03.jsx","views/Education/Education_04.jsx","views/Education/Education.jsx","views/EmploymentHistory/EmploymentHistory_01.jsx","views/EmploymentHistory/ProfessionalReferencesTwin.jsx","views/EmploymentHistory/EmploymentHistory_02.jsx","views/EmploymentHistory/EmploymentHistory_00.jsx","views/EmploymentHistory/EmploymentHistory.jsx","views/Disclaimer.jsx","views/ThankYou.jsx","views/MultiStepForm.jsx","App.js","index.js"],"names":["getFirstErrorKey","object","keys","firstErrorKey","Object","isObject","join","FormikOnError","children","formik","useFormikContext","useState","submitCount","setSubmitCount","useEffect","isValid","isSubmitting","errors","global","window","document","getElementsByName","length","disabled","scrollIntoView","block","inline","focus","personalData","fullName","name","label","required","requiredErrorMsg","col","email","invalidErrorMsg","position","positionDate","salary","lastNumSsn","type","firstName","middleName","lastName","street","city","state","zip","phone","phoneOther","age","availability","shiftFirst","shiftSecond","shiftThird","comment","rows","weekends","overtime","break","note","ableStartDate","howLearnAboutCompany","everWorkedForCompany","knowAnyoneWhoWorks","legallyAuthorized","sponsorshipRequire","military","militaryServed","education","highSchool","address","graduate","institution","license","university","technical","other","employers","companyName","staffingAgency","supervisorName","companyPhone","mayWeContact","dateEmployedFrom","dateEmployedTo","lastWage","describeJob","reasonLeaving","references","relationship","resume","workHistory","iAgree","checkoutFormModel","eCity","eState","SUPPORTED_FORMATS","emailRegEx","phoneRegExp","Yup","shape","matches","test","value","moreThan","isValidSync","notRequired","size","includes","when","is","then","of","max","Date","eventStartDate","schema","min","oneOf","theme","createMuiTheme","body1","color","fontSize","lineHeight","letterSpacing","fontFamily","fontWeight","breakpoints","up","h1","textTransform","marginBottom","h2","h3","h4","h5","h6","overline","values","xs","sm","md","lg","xl","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","CssTextField","withStyles","root","padding","height","borderRadius","backgroundColor","borderColor","transition","borderWidth","TextField","InputField","props","errorText","rest","useField","field","meta","className","InputLabel","error","touched","helperText","at","_renderHelperText","variant","TextMaskCustom","mask","placeholderChar","showMask","InputFieldPhone","InputProps","inputComponent","onChange","onBlur","CheckboxField","setValue","FormControl","FormControlLabel","checked","control","clsx","Checkbox","e","target","FormHelperText","useStyles","makeStyles","icon","right","top","opacity","selectMenu","borderBottom","input","border","InputBase","SelectField","classes","data","selectedValue","isError","fullWidth","Select","displayEmpty","IconComponent","inputProps","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","map","item","index","MenuItem","defaultProps","months","StaticPickers","start","end","step","selectedDate","onChangeYear","year","month","onChangeMonth","toggleCalendar","years","Array","from","Math","ceil","x","yearSlider","useRef","monthSlider","pickerProps","useStaticState","settingsMonthSlider","initialSlide","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","afterChange","centerMode","swipe","settingsYearSlider","indexOf","onClick","current","slickPrev","ref","i","slickNext","Button","DatePickerField","helper","initialDate","setSelectedDate","setYear","setMonth","calendar","anchorEl","setAnchorEl","open","Boolean","id","undefined","_onChange","date","ISODateString","toISOString","handleClose","toLocaleDateString","split","_month","_year","aria-describedby","event","currentTarget","onOpen","invalidDateMessage","format","allowKeyboardControl","Popover","onClose","parseInt","page","newDate","MultilineTextField","multiline","InputFileUpload","Input","form","file","files","setFieldValue","borderBottomColor","CheckboxMiniField","SubmitBtn","btnNext","CircularProgress","getWindowDimensions","width","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useBlockScroll","elRef","el","textAreas","querySelectorAll","onWheel","preventDefault","isMouse","deltaX","Number","isInteger","deltaY","l","parent","parentElement","onmouseover","onmouseout","onmousemove","scrollTo","left","scrollLeft","behavior","useCalculateHeight","calculateHeight","containers","container","contentBlocks","arrayOhHeights","push","offsetHeight","result","reduce","a","b","verticalLines","style","Introduction","formField","btnSettings","clickSubmitBtn","setForm","visible","setVisible","Fragment","Grid","direction","alignItems","Typography","gutterBottom","href","useStepIconStyles","display","active","circle","completed","marginRight","AlbaStepIcon","num","places","endForm","number","String","padStart","InputFieldNum","positions","PersonalData_01","fields","isMobile","useMediaQuery","down","defaultMatches","spacing","PersonalData_02","rowsMax","PersonalData_03","PersonalData","Education_01","Education_02","Education_03","Education_04","Education","EmploymentHistory_01","render","arrayHelpers","employer","remove","ProfessionalReferencesTwin","double","EmploymentHistory_02","referencesTwin","forEach","firstRef","secondRef","reference","EmploymentHistory_00","component","EmploymentHistory","Disclaimer","ThankYou","location","replace","formId","steps","title","MultiStepForm","useForm","formInitialValues","formData","useStep","initialStep","stepIndex","navigation","go","currentValidationSchema","validationSchema","stepId","setCompleted","unlockedSteps","setUnlockedSteps","checkerArray","arr","every","v","elActiveStep","useStepsScroll","renderStepContent","scrollContainer","activeItem","scrollRect","getBoundingClientRect","activeRect","scrollLeftPosition","Stepper","nonLinear","activeStep","connector","Step","StepLabel","StepIconComponent","justify","initialValues","onSubmit","actions","newCompleted","newUnlockedSteps","console","log","setTouched","setSubmitting","findIndex","element","setUncompleted","noValidate","springConfig","delay","duration","easeFunction","containerStyle","slideStyle","slideClassName","smoothscroll","polyfill","App","ThemeProvider","utils","DateFnsUtils","rootEl","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f87543e7.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport isObject from 'lodash/isObject';\r\nimport { useFormikContext } from 'formik';\r\n\r\nconst getFirstErrorKey = (object, keys = []) => {\r\n    const firstErrorKey = Object.keys(object)[0];\r\n    if (isObject(object[firstErrorKey])) {\r\n        return getFirstErrorKey(object[firstErrorKey], [...keys, firstErrorKey]);\r\n    }\r\n    return [...keys, firstErrorKey].join('.');\r\n};\r\n\r\nconst FormikOnError = ({ children }) => {\r\n    const formik = useFormikContext();\r\n    const [submitCount, setSubmitCount] = useState(formik.submitCount)\r\n\r\n    useEffect(() => {\r\n        if (!formik.isValid && formik.submitCount > submitCount && formik.isSubmitting) {\r\n            const firstErrorKey = getFirstErrorKey(formik.errors);\r\n            if (global.window.document.getElementsByName(firstErrorKey).length) {\r\n                if(global.window.document.getElementsByName(firstErrorKey)[0].disabled) {\r\n                    global.window.document.getElementsByName(firstErrorKey)[0].scrollIntoView({block: \"center\", inline: \"center\"});\r\n                }\r\n                global.window.document.getElementsByName(firstErrorKey)[0].focus();\r\n            }\r\n            setSubmitCount(formik.submitCount)\r\n        }\r\n    }, [formik.submitCount, formik.isValid, formik.errors]);\r\n    return children;\r\n};\r\n\r\nexport default FormikOnError;","export default {\r\n    formId: 'appForm',\r\n    formField: {\r\n        personalData: {\r\n            fullName: {\r\n                name: 'fullName',\r\n                label: 'Full name',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 12,\r\n            },\r\n            email: {\r\n                name: 'email',\r\n                label: 'Email',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n            },\r\n            position: {\r\n                name: 'position',\r\n                label: 'Position applied for',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 8,\r\n            },\r\n            positionDate: {\r\n                name: 'positionDate',\r\n                label: 'Date',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n            },\r\n            salary: {\r\n                name: 'salary',\r\n                label: 'Salary/wage expectations',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            lastNumSsn: {\r\n                name: 'lastNumSsn',\r\n                label: 'Last 4 numbers of your ssn',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n                type: 'ssn'\r\n            },\r\n            firstName: {\r\n                name: 'firstName',\r\n                label: 'First Name',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            middleName: {\r\n                name: 'middleName',\r\n                label: 'Middle Name',\r\n                required: false,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            lastName: {\r\n                name: 'lastName',\r\n                label: 'Last Name',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            street: {\r\n                name: 'street',\r\n                label: 'Street Address',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 12,\r\n            },\r\n            city: {\r\n                name: 'city',\r\n                label: 'City',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            state: {\r\n                name: 'state',\r\n                label: 'State',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n            },\r\n            zip: {\r\n                name: 'zip',\r\n                label: 'Zip Code',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                col: 4,\r\n                type: 'number'\r\n            },\r\n            phone: {\r\n                name: 'phone',\r\n                label: 'Telephone/Cell',\r\n                required: true,\r\n                requiredErrorMsg: 'This is a required field.',\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n                type: 'phone'\r\n            },\r\n            phoneOther: {\r\n                name: 'phoneOther',\r\n                label: 'Other Telephone',\r\n                required: false,\r\n                invalidErrorMsg: 'Incorrectly filled in.',\r\n                col: 4,\r\n                type: 'phone'\r\n            },\r\n            age: {\r\n                name: 'age',\r\n                label: 'Specify your age',\r\n                required: false,\r\n                col: 4,\r\n                type: \"number\"\r\n            },\r\n            availability: {\r\n                shiftFirst: {\r\n                    name: 'shiftFirst',\r\n                    label: '1st (7a~3p)',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                shiftSecond: {\r\n                    name: 'shiftSecond',\r\n                    label: '2nd (3p~11p)',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                shiftThird: {\r\n                    name: 'shiftThird',\r\n                    label: '3rd (11p~7a)',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 4\r\n                },\r\n                weekends: {\r\n                    name: 'weekends',\r\n                    label: 'Are you available to work weekends?',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                overtime: {\r\n                    name: 'overtime',\r\n                    label: 'Will you work overtime, if required?',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"checkbox\",\r\n                    break: true,\r\n                    note: 'It is not necessary for you to identify unavailability for work because of religious observance or practice or any other protected classification. Subsequent to any job offer, we will consider whether a reasonable accommodation can be made.'\r\n                },\r\n                ableStartDate: {\r\n                    name: 'ableStartDate',\r\n                    label: 'When will you be able to start work?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"date\"\r\n                },\r\n                howLearnAboutCompany: {\r\n                    name: 'howLearnAboutCompany',\r\n                    label: 'How did you learn of the Company?',\r\n                    required: false,\r\n                    col: 8,\r\n                    type: \"text\"\r\n                },\r\n                everWorkedForCompany: {\r\n                    name: 'everWorkedForCompany',\r\n                    label: 'Have you ever applied or worked for the Company before?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                knowAnyoneWhoWorks: {\r\n                    name: 'knowAnyoneWhoWorks',\r\n                    label: 'Do you know anyone who works here?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                legallyAuthorized: {\r\n                    name: 'legallyAuthorized',\r\n                    label: 'Are you legally authorized to work in the United States?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                sponsorshipRequire: {\r\n                    name: 'sponsorshipRequire',\r\n                    label: 'Will you now or in the future require sponsorship for employment visa status (e.g.,H-1B visa status)?',\r\n                    required: false,\r\n                    col: 8,\r\n                    type: \"checkbox\",\r\n                    note: \"The Federal Immigration and Reform and Control Act of 1986 requires that a DHS Employment Eligibility Verification “Form I-9” be completed for every new hire and that within 3 business days of beginning work every new hire must present to the employer documentation establishing his/her identity and authorization to work. This federal requirement must be satisfied as a condition of employment.\",\r\n                    break: true\r\n                },\r\n            },\r\n            military: {\r\n                militaryServed: {\r\n                    name: 'militaryServed',\r\n                    label: 'Have you ever served in the military?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n            }\r\n        },\r\n        education: {\r\n            highSchool: {\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Name, City and State of Educational Institution',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                graduate: {\r\n                    name: 'graduate',\r\n                    label: 'Graduate',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                institution: {\r\n                    name: 'institution',\r\n                    label: 'Institution or Provider',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                license: {\r\n                    name: 'license',\r\n                    label: 'License or Certification Title',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 8\r\n                },\r\n            },\r\n            university: {\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Name, City and State of Educational Institution',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                graduate: {\r\n                    name: 'graduate',\r\n                    label: 'Graduate',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                institution: {\r\n                    name: 'institution',\r\n                    label: 'Institution or Provider',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                license: {\r\n                    name: 'license',\r\n                    label: 'License or Certification Title',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 8,\r\n                },\r\n            },\r\n            technical: {\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Name, City and State of Educational Institution',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                graduate: {\r\n                    name: 'graduate',\r\n                    label: 'Graduate',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                institution: {\r\n                    name: 'institution',\r\n                    label: 'Institution or Provider',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                license: {\r\n                    name: 'license',\r\n                    label: 'License or Certification Title',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 8\r\n                },\r\n            },\r\n            other: {\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Name, City and State of Educational Institution',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                graduate: {\r\n                    name: 'graduate',\r\n                    label: 'Graduate',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                institution: {\r\n                    name: 'institution',\r\n                    label: 'Institution or Provider',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                license: {\r\n                    name: 'license',\r\n                    label: 'License or Certification Title',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                comment: {\r\n                    name: 'comment',\r\n                    label: 'Comment',\r\n                    required: false,\r\n                    col: 12,\r\n                    type: \"textarea\",\r\n                    rows: 8\r\n                },\r\n            }\r\n        },\r\n        employers: [\r\n            {\r\n                companyName: {\r\n                    name: 'companyName',\r\n                    label: 'Company Name',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 8,\r\n                    type: \"text\"\r\n                },\r\n                staffingAgency: {\r\n                    name: 'staffingAgency',\r\n                    label: 'Is this a Staffing Agency?',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Address',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                city: {\r\n                    name: 'city',\r\n                    label: 'City',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                state: {\r\n                    name: 'state',\r\n                    label: 'State',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                supervisorName: {\r\n                    name: 'supervisorName',\r\n                    label: 'Supervisor Name',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                companyPhone: {\r\n                    name: 'companyPhone',\r\n                    label: 'Company Phone',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    invalidErrorMsg: 'Incorrectly filled in.',\r\n                    col: 4,\r\n                    type: \"phone\"\r\n                },\r\n                mayWeContact: {\r\n                    name: 'mayWeContact',\r\n                    label: 'May we contact?',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"checkbox\"\r\n                },\r\n                dateEmployedFrom: {\r\n                    name: 'dateEmployedFrom',\r\n                    label: 'Date Employed From',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"date\"\r\n                },\r\n                dateEmployedTo: {\r\n                    name: 'dateEmployedTo',\r\n                    label: 'Date Employed To',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 4,\r\n                    type: \"date\"\r\n                },\r\n                lastWage: {\r\n                    name: 'lastWage',\r\n                    label: 'Last Wage',\r\n                    required: false,\r\n                    col: 4,\r\n                    type: \"text\"\r\n                },\r\n                describeJob: {\r\n                    name: 'describeJob',\r\n                    label: 'Describe Job',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 12,\r\n                    type: \"text\"\r\n                },\r\n                reasonLeaving: {\r\n                    name: 'reasonLeaving',\r\n                    label: 'Reason for leaving',\r\n                    required: true,\r\n                    requiredErrorMsg: 'This is a required field.',\r\n                    col: 12,\r\n                    type: \"text\"\r\n                }\r\n            }\r\n        ],\r\n        references: [\r\n            {\r\n                name: {\r\n                    name: 'name',\r\n                    label: 'Name',\r\n                    required: false,\r\n                    col: 6,\r\n                    type: \"text\"\r\n                },\r\n                address: {\r\n                    name: 'address',\r\n                    label: 'Address',\r\n                    required: false,\r\n                    col: 6,\r\n                    type: \"text\"\r\n                },\r\n                phone: {\r\n                    name: 'phone',\r\n                    label: 'Phone',\r\n                    required: false,\r\n                    col: 6,\r\n                    type: \"phone\"\r\n                },\r\n                relationship: {\r\n                    name: 'relationship',\r\n                    label: 'Relationship',\r\n                    required: false,\r\n                    col: 6,\r\n                    type: \"text\"\r\n                },\r\n            }\r\n        ],\r\n        resume: {\r\n            name: 'resume',\r\n            label: 'Attach Resume',\r\n            required: false,\r\n            col: 12,\r\n            type: \"file\",\r\n            rows: 8\r\n        },\r\n        workHistory: {\r\n            name: 'workHistory',\r\n            label: 'Do you have any work history (count all temporary work, independent work etc.)?',\r\n            required: true,\r\n            col: 6,\r\n            type: \"checkbox\"\r\n        },\r\n        iAgree: {\r\n            name: 'iAgree',\r\n            label: ' I agree that I have read and understand this APPLICANT’S ACKNOWLEDGMENT',\r\n            required: true,\r\n            requiredErrorMsg: 'This is a required field.',\r\n            col: 6,\r\n            type: \"checkboxMini\"\r\n        }\r\n    }\r\n};\r\n","import checkoutFormModel from \"./formModel\";\r\nconst {\r\n    formField: {\r\n        personalData: {\r\n            fullName,\r\n            email,\r\n            position,\r\n            positionDate,\r\n            salary,\r\n            lastNumSsn,\r\n            firstName,\r\n            middleName,\r\n            lastName,\r\n            street,\r\n            city,\r\n            state,\r\n            zip,\r\n            phone,\r\n            phoneOther,\r\n            age,\r\n            availability: {\r\n                shiftFirst,\r\n                shiftSecond,\r\n                shiftThird,\r\n                comment,\r\n                weekends,\r\n                overtime,\r\n                ableStartDate,\r\n                howLearnAboutCompany,\r\n                everWorkedForCompany,\r\n                knowAnyoneWhoWorks,\r\n                legallyAuthorized,\r\n                sponsorshipRequire,\r\n            },\r\n            military: {\r\n                militaryServed\r\n            }\r\n        },\r\n        education: {\r\n            highSchool,\r\n            university,\r\n            technical,\r\n            other\r\n        },\r\n        employers,\r\n        references\r\n    }\r\n} = checkoutFormModel;\r\n\r\nexport default {\r\n    personalData: {\r\n        [fullName.name]: \"\",\r\n        [email.name]: \"\",\r\n        [position.name]: \"\",\r\n        [positionDate.name]: \"\",\r\n        [salary.name]: \"\",\r\n        [lastNumSsn.name]: \"\",\r\n        [firstName.name]: \"\",\r\n        [middleName.name]: \"\",\r\n        [lastName.name]: \"\",\r\n        [street.name]: \"\",\r\n        [city.name]: \"\",\r\n        [state.name]: \"\",\r\n        [zip.name]: \"\",\r\n        [phone.name]: \"\",\r\n        [phoneOther.name]: \"\",\r\n        [age.name]: \"\",\r\n        availability: {\r\n            [shiftFirst.name]: false,\r\n            [shiftSecond.name]: false,\r\n            [shiftThird.name]: false,\r\n            [comment.name]: \"\",\r\n            [weekends.name]: false,\r\n            [overtime.name]: false,\r\n            [ableStartDate.name]: \"\",\r\n            [howLearnAboutCompany.name]: \"\",\r\n            [everWorkedForCompany.name]: false,\r\n            [knowAnyoneWhoWorks.name]: false,\r\n            [legallyAuthorized.name]: false,\r\n            [sponsorshipRequire.name]: false,\r\n        },\r\n        military: {\r\n            [militaryServed.name]: false,\r\n        }\r\n    },\r\n    education: {\r\n        highSchool: {\r\n            [highSchool.address.name]: \"\",\r\n            [highSchool.graduate.name]: false,\r\n            [highSchool.institution.name]: \"\",\r\n            [highSchool.license.name]: \"\",\r\n            [highSchool.comment.name]: \"\"\r\n        },\r\n        university: {\r\n            [university.address.name]: \"\",\r\n            [university.graduate.name]: false,\r\n            [university.institution.name]: \"\",\r\n            [university.license.name]: \"\",\r\n            [university.comment.name]: \"\"\r\n        },\r\n        technical: {\r\n            [technical.address.name]: \"\",\r\n            [technical.graduate.name]: false,\r\n            [technical.institution.name]: \"\",\r\n            [technical.license.name]: \"\",\r\n            [technical.comment.name]: \"\"\r\n        },\r\n        other: {\r\n            [other.address.name]: \"\",\r\n            [other.graduate.name]: false,\r\n            [other.institution.name]: \"\",\r\n            [other.license.name]: \"\",\r\n            [other.comment.name]: \"\"\r\n        }\r\n    },\r\n    employers: [\r\n        {\r\n            [employers[0].companyName.name]: \"\",\r\n            [employers[0].staffingAgency.name]: false,\r\n            [employers[0].address.name]: \"\",\r\n            [employers[0].city.name]:\"\",\r\n            [employers[0].state.name]: \"\",\r\n            [employers[0].supervisorName.name]: \"\",\r\n            [employers[0].companyPhone.name]: \"\",\r\n            [employers[0].mayWeContact.name]: false,\r\n            [employers[0].dateEmployedFrom.name]: \"\",\r\n            [employers[0].dateEmployedTo.name]: \"\",\r\n            [employers[0].lastWage.name]: \"\",\r\n            [employers[0].describeJob.name]: \"\",\r\n            [employers[0].reasonLeaving.name]: \"\"\r\n        }\r\n    ],\r\n    references: [\r\n        {\r\n            [references[0].name.name]: \"\",\r\n            [references[0].address.name]: \"\",\r\n            [references[0].phone.name]: \"\",\r\n            [references[0].relationship.name]: \"\"\r\n        }\r\n    ],\r\n    resume: null,\r\n    workHistory: false,\r\n    iAgree: false\r\n};\r\n","import * as Yup from 'yup';\r\nimport checkoutFormModel from './formModel';\r\nconst {\r\n    formField: {\r\n        personalData: {\r\n            fullName,\r\n            email,\r\n            position,\r\n            positionDate,\r\n            salary,\r\n            lastNumSsn,\r\n            firstName,\r\n            middleName,\r\n            lastName,\r\n            street,\r\n            city,\r\n            state,\r\n            zip,\r\n            phone,\r\n            phoneOther,\r\n            age\r\n        },\r\n        workHistory,\r\n        employers: [{\r\n            companyName,\r\n            city: eCity,\r\n            state: eState,\r\n            supervisorName,\r\n            companyPhone,\r\n            dateEmployedFrom,\r\n            dateEmployedTo,\r\n            describeJob,\r\n            reasonLeaving\r\n        }],\r\n        iAgree\r\n    }\r\n} = checkoutFormModel;\r\n\r\nconst SUPPORTED_FORMATS = [\r\n    'application/pdf',\r\n    'image/png',\r\n    'image/jpeg',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'text/plain',\r\n    'application/vnd.oasis.opendocument.presentation',\r\n    'application/vnd.oasis.opendocument.spreadsheet',\r\n    'application/vnd.oasis.opendocument.text'\r\n];\r\nconst FILE_SIZE = 1024 * 1024;  // 1 Mb\r\n\r\nconst emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst phoneRegExp = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\r\nconst ssnRegExp = /^[0-9]{4}/;\r\n\r\nexport default [\r\n    Yup.object().shape({\r\n        personalData: Yup.object().shape({\r\n            [fullName.name]: Yup.string().required(`${fullName.requiredErrorMsg}`),\r\n            [email.name]: Yup.string()\r\n                .matches(emailRegEx, email.invalidErrorMsg)\r\n                .required(`${email.requiredErrorMsg}`)\r\n        })\r\n    }),\r\n    Yup.object().shape({\r\n        personalData: Yup.object().shape({\r\n            [position.name]: Yup.string().required(`${position.requiredErrorMsg}`),\r\n            [positionDate.name]: Yup.string().required(`${positionDate.requiredErrorMsg}`),\r\n            [salary.name]: Yup.string().required(`${salary.requiredErrorMsg}`),\r\n            [lastNumSsn.name]: Yup.string()\r\n                .matches(ssnRegExp, lastNumSsn.invalidErrorMsg)\r\n                .required(`${lastNumSsn.requiredErrorMsg}`),\r\n            [email.name]: Yup.string()\r\n                .matches(emailRegEx, email.invalidErrorMsg)\r\n                .required(`${email.requiredErrorMsg}`),\r\n            [firstName.name]: Yup.string().required(`${firstName.requiredErrorMsg}`),\r\n            [middleName.name]: Yup.string(),\r\n            [lastName.name]: Yup.string().required(`${lastName.requiredErrorMsg}`),\r\n            [street.name]: Yup.string().required(`${street.requiredErrorMsg}`),\r\n            [city.name]: Yup.string().required(`${city.requiredErrorMsg}`),\r\n            [state.name]: Yup.string().required(`${state.requiredErrorMsg}`),\r\n            [zip.name]: Yup.string().required(`${zip.requiredErrorMsg}`).test('age', 'Incorrectly filled in.', function(value) {\r\n                if (!!value || value === 0) {\r\n                    const schema = Yup.number().moreThan(0, 'Incorrectly filled in.');\r\n                    return schema.isValidSync(value);\r\n                }\r\n                return true;\r\n            }),\r\n            [phone.name]: Yup.string().matches(phoneRegExp, phone.invalidErrorMsg).required(`${phone.requiredErrorMsg}`),\r\n            [phoneOther.name]: Yup.string().matches(phoneRegExp, phone.invalidErrorMsg),\r\n            [age.name]: Yup.number().notRequired().test('age', 'Incorrectly filled in.', function(value) {\r\n                if (!!value || value === 0) {\r\n                    const schema = Yup.number().moreThan(0, 'Incorrectly filled in.');\r\n                    return schema.isValidSync(value);\r\n                }\r\n                return true;\r\n            }),\r\n        })\r\n    }),\r\n    null,\r\n    Yup.object().shape({\r\n        resume: Yup.mixed()\r\n            .test('fileSize', 'File Size is too large',\r\n            value => !value || value.size <= FILE_SIZE)\r\n            .test('fileType', 'Unsupported File Format',\r\n            value => !value || value && SUPPORTED_FORMATS.includes(value.type)),\r\n        [workHistory.name]: Yup.boolean(),\r\n        employers: Yup.array().when('workHistory', {\r\n            is: value => !!value,\r\n            then: Yup.array().of(Yup.object().shape({\r\n                [companyName.name]: Yup.string().required(`${companyName.requiredErrorMsg}`),\r\n                [eCity.name]: Yup.string().required(`${eCity.requiredErrorMsg}`),\r\n                [eState.name]: Yup.string().required(`${eState.requiredErrorMsg}`),\r\n                [supervisorName.name]: Yup.string().required(`${supervisorName.requiredErrorMsg}`),\r\n                [companyPhone.name]: Yup.string().matches(phoneRegExp, companyPhone.invalidErrorMsg).required(`${companyPhone.requiredErrorMsg}`),\r\n                [dateEmployedFrom.name]: Yup.date().max(new Date(), \"Future date not allowed.\")\r\n                    .required(`${dateEmployedFrom.requiredErrorMsg}`),\r\n                [dateEmployedTo.name]: Yup.date()\r\n                    .when(\r\n                        \"dateEmployedFrom\",\r\n                        (eventStartDate, schema) => eventStartDate && schema.min(eventStartDate, \"Can't be before employed.\"))\r\n                    .required(`${dateEmployedTo.requiredErrorMsg}`),\r\n                [describeJob.name]: Yup.string().required(`${describeJob.requiredErrorMsg}`),\r\n                [reasonLeaving.name]: Yup.string().required(`${reasonLeaving.requiredErrorMsg}`),\r\n            }))\r\n        })\r\n    }),\r\n    Yup.object().shape({\r\n        [iAgree.name]: Yup.boolean().oneOf([true], `${iAgree.requiredErrorMsg}`),\r\n    })\r\n];\r\n","import { createMuiTheme } from '@material-ui/core';\r\nconst theme = createMuiTheme();\r\n\r\nexport default {\r\n  body1: {\r\n    color: 'rgba(255, 255, 255, .8)',\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    letterSpacing: \"0.03em\",\r\n    fontFamily: \"'Clear Sans', sans-serif\",\r\n    fontWeight: 300,\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: \"18px\",\r\n      lineHeight: \"27px\",\r\n    },\r\n  },\r\n  h1: {\r\n    fontWeight: 700,\r\n    fontSize: \"30px\",\r\n    lineHeight: \"30px\",\r\n    textTransform: \"uppercase\",\r\n    marginBottom: \"20px !important\",\r\n    fontFamily: \"'Exo 2', sans-serif\",\r\n    [theme.breakpoints.up('sm')]: {\r\n      fontSize: \"40px\",\r\n      lineHeight: \"36px\",\r\n      marginBottom: \"20px !important\",\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: \"60px\",\r\n      lineHeight: \"60px\",\r\n      marginBottom: \"30px !important\",\r\n    },\r\n  },\r\n  h2: {\r\n    fontWeight: 700,\r\n    fontSize: \"24px \",\r\n    lineHeight: \"24px\",\r\n    textTransform: 'uppercase',\r\n    marginBottom: \"20px !important\",\r\n    fontFamily: \"'Exo 2', sans-serif\",\r\n    [theme.breakpoints.up('sm')]: {\r\n      fontSize: \"28px \",\r\n      lineHeight: \"28px \",\r\n      marginBottom: \"30px !important\",\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: \"30px \",\r\n      lineHeight: \"30px \",\r\n    },\r\n  },\r\n  h3: {\r\n    fontWeight: 700,\r\n    fontSize: \"18px \",\r\n    lineHeight: \"18px\",\r\n    textTransform: 'uppercase',\r\n    fontFamily: \"'Exo 2', sans-serif\",\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: \"20px \",\r\n      lineHeight: \"34px\",\r\n    },\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 576,\r\n      md: 768,\r\n      lg: 992,\r\n      xl: 1400,\r\n    },\r\n  },\r\n  palette: {\r\n    background: {\r\n      dark: '#F4F6F8',\r\n      default: colors.common.white,\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600]\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport { TextField, InputLabel } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport theme from \"../../theme\";\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            color: \"rgba(255, 255, 255, .6)\",\r\n            fontFamily: \"'Exo 2', sans-serif\",\r\n            padding: \"0 20px\",\r\n            lineHeight: \"44px\",\r\n            height: \"44px\",\r\n            fontSize: \"16px\",\r\n            [theme.breakpoints.up('lg')]: {\r\n                fontSize: \"18px\",\r\n                lineHeight: \"54px\",\r\n                height: \"54px\",\r\n            },\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            borderRadius: 0,\r\n            backgroundColor: \"697d99\",\r\n\r\n            '& fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.1)',\r\n                transition: \"all .5s\",\r\n                borderWidth: 1,\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                borderWidth: 1,\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                borderWidth: 1,\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nexport default function InputField(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n\r\n    function _renderHelperText() {\r\n        const [touched, error] = at(meta, 'touched', 'error');\r\n        if (touched && error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <CssTextField\r\n                type=\"text\"\r\n                error={meta.touched && meta.error && true}\r\n                helperText={_renderHelperText()}\r\n                variant=\"outlined\"\r\n                {...field}\r\n                {...rest}\r\n                label=\"\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {TextField, InputLabel, FormHelperText} from '@material-ui/core';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport MaskedInput from 'react-text-mask';\r\nimport theme from \"../../theme\";\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            color: \"rgba(255, 255, 255, .6)\",\r\n            padding: \"0 20px\",\r\n            lineHeight: \"44px\",\r\n            height: \"44px\",\r\n            fontSize: \"16px\",\r\n            fontFamily: \"'Exo 2', sans-serif\",\r\n            [theme.breakpoints.up('lg')]: {\r\n                fontSize: \"18px\",\r\n                lineHeight: \"54px\",\r\n                height: \"54px\",\r\n            },\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            borderRadius: 0,\r\n            backgroundColor: \"697d99\",\r\n\r\n            '& fieldset': {\r\n                transition: \"all .5s\",\r\n                borderColor: 'rgba(255, 255, 255, 0.1)',\r\n                borderWidth: 1,\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                borderWidth: 1,\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                borderWidth: 1,\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst TextMaskCustom = (props) => {\r\n    const { ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask={false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function InputFieldPhone(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n\r\n    function _renderHelperText() {\r\n        if (touched && error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <CssTextField\r\n                type=\"text\"\r\n                error={meta.touched && meta.error && true}\r\n                helperText={_renderHelperText()}\r\n                variant=\"outlined\"\r\n                {...field}\r\n                {...rest}\r\n                label=\"\"\r\n                InputProps={{\r\n                    inputComponent: TextMaskCustom,\r\n                    value: field.value,\r\n                    onChange: field.onChange,\r\n                    onBlur: field.onBlur,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText, InputLabel\r\n} from '@material-ui/core';\r\nimport clsx from \"clsx\";\r\n\r\nexport default function CheckboxField(props) {\r\n    const { label, ...rest } = props;\r\n    const [field, meta, helper] = useField(props);\r\n    const { setValue } = helper;\r\n\r\n    function _renderHelperText() {\r\n        const [touched, error] = at(meta, 'touched', 'error');\r\n        if (touched && error) {\r\n            return <FormHelperText>{error}</FormHelperText>;\r\n        }\r\n    }\r\n\r\n    function _onChange(e) {\r\n        setValue(e.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control py-0\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <FormControl {...rest}>\r\n                <FormControlLabel\r\n                    value={field.value}\r\n                    checked={field.value}\r\n                    className=\"form__checkbox__switch\"\r\n                    control={\r\n                        <>\r\n                            <span className={clsx(\"form__checkbox__slider__no\", !field.value && \"checked\")}>No</span>\r\n                            <span className={clsx(\"form__checkbox__slider__yes\", field.value && \"checked\")}>Yes</span>\r\n                            <Checkbox {...field} className={clsx(\"form__checkbox__input\", field.value && \"checked\")} onChange={_onChange} />\r\n                            <span className={clsx(\"form__checkbox__slider\", field.value && \"checked\")}/>\r\n                        </>\r\n                    }\r\n                    label=\"\"\r\n                />\r\n                {_renderHelperText()}\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormHelperText,\r\n    FormControl,\r\n    InputBase\r\n} from '@material-ui/core';\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport theme from \"../../theme\";\r\n\r\nconst useStyles = makeStyles({\r\n    icon: {\r\n        position: \"absolute\",\r\n        right: \"20px\",\r\n        top: 0,\r\n        lineHeight: \"40px\",\r\n        [theme.breakpoints.up('lg')]: {\r\n            lineHeight: \"50px\",\r\n        },\r\n        '&.MuiSelect-iconOpen': {\r\n            top: \"5px\",\r\n            opacity: 1,\r\n        }\r\n    },\r\n    selectMenu: {\r\n        padding: \"0 20px\",\r\n        color: \"rgba(255, 255, 255, .6)\",\r\n        lineHeight: \"47px\",\r\n        height: \"37px\",\r\n        fontFamily: \"'Exo 2', sans-serif\",\r\n        [theme.breakpoints.up('lg')]: {\r\n            lineHeight: \"47px\",\r\n            height: \"47px\",\r\n        },\r\n        borderBottom: \"1px solid rgba(255, 255, 255, .05)\",\r\n        backgroundColor: \"697d99\",\r\n\r\n        '&:last-child': {\r\n            borderBottom: 'none'\r\n        },\r\n        '&.Mui-selected': {\r\n            color: \"#fff\",\r\n            background: \"rgba(255, 255, 255, .05)\"\r\n        },\r\n        \"&:hover\": {\r\n            background: \"rgba(255, 255, 255, .05)\",\r\n        },\r\n    }\r\n});\r\n\r\nconst CssTextField = withStyles((theme) => ({\r\n    input: {\r\n        color: \"rgba(255, 255, 255, .6)\",\r\n        lineHeight: \"42px\",\r\n        height: \"44px\",\r\n        fontSize: \"16px\",\r\n        [theme.breakpoints.up('lg')]: {\r\n            fontSize: \"18px\",\r\n            lineHeight: \"52px\",\r\n            height: \"54px\",\r\n        },\r\n        padding: \"0 20px\",\r\n        borderRadius: 0,\r\n        position: 'relative',\r\n        backgroundColor: \"697d99\",\r\n        border: '1px solid rgba(255, 255, 255, 0.1)',\r\n        boxSizing: \"border-box\",\r\n        transition: \"all .5s\",\r\n        '&:hover, &:focus': {\r\n            border: '1px solid rgba(255, 255, 255, 0.3)',\r\n        },\r\n    }\r\n}))(InputBase);\r\n\r\nfunction SelectField(props) {\r\n    const classes = useStyles();\r\n    const { label, data, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n    const { value: selectedValue } = field;\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n    const isError = touched && error && true;\r\n\r\n    function _renderHelperText() {\r\n        if (isError) {\r\n            return <FormHelperText>{error}</FormHelperText>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <FormControl className=\"form__select__wrap\" fullWidth error={isError}>\r\n                <Select {...field}\r\n                    value={selectedValue ? selectedValue : ''}\r\n                    input={<CssTextField label=\"\" />}\r\n                    displayEmpty\r\n                    IconComponent={props => (\r\n                        <div className={clsx(classes.icon, props.className)}>\r\n                            <span className=\"alba-icon__arrow\"/>\r\n                        </div>\r\n                    )}\r\n                    inputProps={{\r\n                        className: clsx(isError && \"form__input__error\")\r\n                    }}\r\n                    MenuProps={{\r\n                        anchorOrigin: {\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                    }}\r\n                >\r\n                    {data.map((item, index) => (\r\n                        <MenuItem disabled={item.disabled}  className={classes.selectMenu} key={index} value={item.value}>\r\n                            <span className={clsx(!item.value&&\"empty-value\")}>{item.label}</span>\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {_renderHelperText()}\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nSelectField.defaultProps = {\r\n    data: []\r\n};\r\n\r\nSelectField.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SelectField;\r\n","import React, { useRef } from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { useStaticState, Calendar } from \"@material-ui/pickers\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\"\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nconst months = [\r\n    {\r\n        name: \"January\"\r\n    },\r\n    {\r\n        name: \"February\"\r\n    },\r\n    {\r\n        name: \"March\"\r\n    },\r\n    {\r\n        name: \"April\"\r\n    },\r\n    {\r\n        name: \"May\"\r\n    },\r\n    {\r\n        name: \"June\"\r\n    },\r\n    {\r\n        name: \"July\"\r\n    },\r\n    {\r\n        name: \"August\"\r\n    },\r\n    {\r\n        name: \"September\"\r\n    },\r\n    {\r\n        name: \"October\"\r\n    },\r\n    {\r\n        name: \"November\"\r\n    },\r\n    {\r\n        name: \"December\"\r\n    }\r\n]\r\n\r\nconst range = (start, end, step) => {\r\n    return Array.from(Array.from(Array(Math.ceil((end-start)/step)).keys()), x => start+ x*step);\r\n}\r\n\r\nfunction StaticPickers({ selectedDate, onChange, onChangeYear, year, month, onChangeMonth, toggleCalendar }) {\r\n    const years = range(2000, 2030, 1);\r\n    const yearSlider = useRef(null);\r\n    const monthSlider = useRef(null);\r\n\r\n    const { pickerProps } = useStaticState({\r\n        value: selectedDate,\r\n        onChange: onChange,\r\n    });\r\n\r\n    const _onChangeMonth = (index) => {\r\n        onChangeMonth(index)\r\n    }\r\n    const _onChangeYear = (index) => {\r\n        onChangeYear(years[index])\r\n    }\r\n\r\n    const settingsMonthSlider = {\r\n        initialSlide: month - 1,\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n        afterChange: _onChangeMonth,\r\n        centerMode: true,\r\n        swipe: false\r\n    };\r\n\r\n    const settingsYearSlider = {\r\n        initialSlide: years.indexOf(year),\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n        afterChange: _onChangeYear,\r\n        centerMode: true,\r\n        swipe: false\r\n    };\r\n\r\n    return (\r\n        <div className=\"form__picker\">\r\n            <div className=\"form__picker__inner-wrap\">\r\n                <span className=\"form__picker__arrow_left\" onClick={() => yearSlider.current.slickPrev()}/>\r\n                <div className=\"form__picker__inner-wrap__slider\">\r\n                    <Slider ref={yearSlider} className=\"form__picker__year\" {...settingsYearSlider}>\r\n                        {years.map((item, i) => (\r\n                            <div className=\"form__picker__year__item\" key={i}>{item}</div>\r\n                        ))}\r\n                    </Slider>\r\n                </div>\r\n                <span className=\"form__picker__arrow_right\" onClick={() => yearSlider.current.slickNext()}/>\r\n            </div>\r\n            <div className=\"form__picker__inner-wrap\">\r\n                <span className=\"form__picker__arrow_left\" onClick={()=>monthSlider.current.slickPrev()} />\r\n                <div className=\"form__picker__inner-wrap__slider\">\r\n                    <Slider ref={monthSlider} className=\"form__picker__month\" {...settingsMonthSlider}>\r\n                        {months.map((item, i) => (\r\n                            <div className=\"form__picker__month__item\" key={i}>{item.name}</div>\r\n                        ))}\r\n                    </Slider>\r\n                </div>\r\n                <span className=\"form__picker__arrow_right\" onClick={() => monthSlider.current.slickNext()}/>\r\n            </div>\r\n            <Calendar {...pickerProps} />\r\n            <Button className=\"form__picker__btn_apply\" onClick={() => toggleCalendar(false)}>\r\n                Apply\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StaticPickers;","import React, { useState, useEffect } from 'react';\r\nimport { useField } from 'formik';\r\nimport {InputLabel, Popover} from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport StaticPickers from \"../StaticPickers\";\r\nimport clsx from \"clsx\";\r\n\r\nexport default function DatePickerField(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta, helper] = useField(props);\r\n    const { touched, error } = meta;\r\n    const { setValue } = helper;\r\n    const isError = touched && error && true;\r\n    const { value } = field;\r\n    const initialDate = new Date();\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [year, setYear] = useState(null);\r\n    const [month, setMonth] = useState(null);\r\n    const [calendar, toggleCalendar] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const _onChangeYear = (page) => {\r\n        const currentDate= selectedDate || initialDate;\r\n        const [month, date, year] = currentDate.toLocaleDateString(\"en-US\").split(\"/\");\r\n        const newDate = new Date(page, month-1, date);\r\n        setSelectedDate(newDate);\r\n        setYear(page);\r\n    }\r\n\r\n    const _onChangeMonth = (page) => {\r\n        const currentDate= selectedDate || initialDate;\r\n        const [month, date, year] = currentDate.toLocaleDateString(\"en-US\").split(\"/\");\r\n        const newDate = new Date(year, page, date);\r\n        setSelectedDate(newDate);\r\n        setMonth(page);\r\n    }\r\n\r\n    function _onChange(date) {\r\n        if (date) {\r\n            setSelectedDate(date);\r\n            try {\r\n                const ISODateString = date.toISOString();\r\n                setValue(ISODateString);\r\n            } catch (error) {\r\n                setValue(date);\r\n            }\r\n        } else {\r\n            setValue(date);\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            const date = new Date(value);\r\n            const [_month, _date, _year] = date.toLocaleDateString(\"en-US\").split(\"/\");\r\n            setSelectedDate(date);\r\n            setYear(_year);\r\n            setMonth(_month);\r\n        } else {\r\n            const [_month, _date, _year] = initialDate.toLocaleDateString(\"en-US\").split(\"/\");\r\n            setYear(_year);\r\n            setMonth(_month);\r\n        }\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if(!value && open) {\r\n            setSelectedDate(initialDate);\r\n            setValue(initialDate);\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <div aria-describedby={id} className=\"form__control__icon-wrap\" onClick={handleClick}>\r\n                <span className={clsx(open&&\"open\",\"form__picker__icon\")}/>\r\n                <KeyboardDatePicker\r\n                    {...field}\r\n                    {...rest}\r\n                    {...props}\r\n                    className=\"form__picker__input\"\r\n                    open={false}\r\n                    value={selectedDate}\r\n                    onOpen={() => toggleCalendar(!calendar)}\r\n                    onChange={_onChange}\r\n                    error={isError}\r\n                    invalidDateMessage={isError && error}\r\n                    helperText={isError && error}\r\n                    variant=\"outlined\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    allowKeyboardControl={false}\r\n                    label=\"\"\r\n                    disabled\r\n                />\r\n            </div>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                className=\"form__picker__popover\"\r\n            >\r\n                <StaticPickers\r\n                    toggleCalendar={handleClose}\r\n                    year={parseInt(year)}\r\n                    month={parseInt(month)}\r\n                    onChangeYear={_onChangeYear}\r\n                    onChangeMonth={_onChangeMonth}\r\n                    onChange={_onChange}\r\n                    selectedDate={selectedDate}\r\n                    calendar={calendar}\r\n                />\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport { TextField, InputLabel } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport theme from \"../../theme\";\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            color: \"rgba(255, 255, 255, .6)\",\r\n            padding: \"0\",\r\n            fontSize: \"16px\",\r\n            lineHeight: \"18px\",\r\n            fontFamily: \"'Exo 2', sans-serif\",\r\n            height: \"44px\",\r\n            [theme.breakpoints.up('lg')]: {\r\n                fontSize: \"18px\",\r\n                lineHeight: \"22px\",\r\n                height: \"54px\",\r\n            },\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            borderRadius: 0,\r\n            backgroundColor: \"697d99\",\r\n\r\n            '& fieldset': {\r\n                transition: \"all .5s\",\r\n                borderColor: 'rgba(255, 255, 255, 0.1)',\r\n                borderWidth: 1,\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                borderWidth: 1,\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                borderWidth: 1,\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nexport default function MultilineTextField(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n\r\n    function _renderHelperText() {\r\n        const [touched, error] = at(meta, 'touched', 'error');\r\n        if (touched && error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <CssTextField\r\n                multiline\r\n                type=\"text\"\r\n                error={meta.touched && meta.error && true}\r\n                helperText={_renderHelperText()}\r\n                className=\"form__input_multiline\"\r\n                variant=\"outlined\"\r\n                {...field}\r\n                {...rest}\r\n                label=\"\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {FormHelperText, Input, InputLabel} from '@material-ui/core';\r\nimport {at} from \"lodash\";\r\nimport {useField} from \"formik\";\r\n\r\nexport default function InputFileUpload({ value , ...props}) {\r\n    const [field, meta, helper] = useField(props.field);\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n    const isError = touched && error && true;\r\n\r\n    function _renderHelperText() {\r\n        if (isError) {\r\n            return <FormHelperText className=\"MuiFormHelperText-root Mui-error Mui-required\">{error}</FormHelperText>;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"form__control form__control_file\">\r\n            <InputLabel\r\n                className=\"form__label form_sub_employment__input_file__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <span className=\"form_sub_employment__input_file__name\">{value ? value.name : \"The file is not selected\"}</span>\r\n            <InputLabel\r\n                className=\"form_sub_employment__input_file__add\"\r\n                required={props.required}>\r\n                {!value && \"Attach Resume\"}\r\n\r\n                <Input\r\n                    className=\"form_sub_employment__input_file\"\r\n                    error={meta.touched && meta.error && true}\r\n                    inputProps={{\r\n                        type: 'file',\r\n                        disabled: props.disabled || props.form.isSubmitting,\r\n                        name: field.name,\r\n                        onChange: (event) => {\r\n                            const file = event.currentTarget.files[0];\r\n                            props.form.setFieldValue(field.name, file);\r\n                        },\r\n                    }}\r\n                />\r\n            </InputLabel>\r\n\r\n            {value && (\r\n                <span\r\n                    className=\"form_sub_employment__input_file__delete\"\r\n                    onClick={() => props.form.setFieldValue(props.field.name, null)}>\r\n                    Delete Resume\r\n                </span>\r\n            )}\r\n            {_renderHelperText()}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {TextField, InputLabel, FormHelperText} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MaskedInput from 'react-text-mask';\r\nimport theme from \"../../theme\";\r\n\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'green',\r\n        },\r\n        '& .MuiInputBase-input': {\r\n            color: \"rgba(255, 255, 255, .6)\",\r\n            padding: \"0 20px\",\r\n            lineHeight: \"44px\",\r\n            height: \"44px\",\r\n            fontSize: \"16px\",\r\n            fontFamily: \"'Exo 2', sans-serif\",\r\n            [theme.breakpoints.up('lg')]: {\r\n                fontSize: \"18px\",\r\n                lineHeight: \"54px\",\r\n                height: \"54px\",\r\n            },\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            borderRadius: 0,\r\n            backgroundColor: \"697d99\",\r\n\r\n            '& fieldset': {\r\n                transition: \"all .5s\",\r\n                borderColor: 'rgba(255, 255, 255, 0.1)',\r\n                borderWidth: 1,\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                borderWidth: 1,\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                borderWidth: 1,\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst TextMaskCustom = (props) => {\r\n    const { ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            mask={[/\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask={false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function InputFieldPhone(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n\r\n    function _renderHelperText() {\r\n        if (touched && error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <CssTextField\r\n                type=\"text\"\r\n                error={meta.touched && meta.error && true}\r\n                helperText={_renderHelperText()}\r\n                variant=\"outlined\"\r\n                {...field}\r\n                {...rest}\r\n                label=\"\"\r\n                InputProps={{\r\n                    inputComponent: TextMaskCustom,\r\n                    value: field.value,\r\n                    onChange: field.onChange,\r\n                    onBlur: field.onBlur,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText, InputLabel\r\n} from '@material-ui/core';\r\nimport clsx from \"clsx\";\r\n\r\nexport default function CheckboxMiniField(props) {\r\n    const { label, value, ...rest } = props;\r\n    const [field, meta, helper] = useField(props);\r\n    const { setValue } = helper;\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n    const isError = touched && error && true;\r\n\r\n    function _renderHelperText() {\r\n        if (isError) {\r\n            return <span className=\"MuiFormHelperText-root Mui-error Mui-required\">{error}</span>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control form__checkbox__mini__control\">\r\n            <FormControl {...rest} error={isError} className=\"form__checkbox__mini__wrap\">\r\n                <FormControlLabel\r\n                    value={field.value}\r\n                    checked={field.value}\r\n                    className=\"form__checkbox__mini\"\r\n                    control={\r\n                        <>\r\n                            <Checkbox {...field} className={clsx(\"form__checkbox__input\", field.value && \"checked\")} onChange={() => setValue(!value)} />\r\n                            <span className={clsx(\"form__checkbox__mini__check\", field.value && \"checked\")}/>\r\n                        </>\r\n                    }\r\n                    label=\"\"\r\n                />\r\n            </FormControl>\r\n            <InputLabel\r\n                className=\"form__label form__checkbox__mini__label\"\r\n                onClick={() => setValue(!value)}\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            {_renderHelperText()}\r\n        </div>\r\n    );\r\n}\r\n","import { Button, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst SubmitBtn = ({ isSubmitting, onClick, btnNext }) => (\r\n    <div className=\"react-form__btn__wrap\">\r\n        <Button\r\n            disabled={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"react-form__btn_next\"\r\n            onClick={onClick}\r\n        >\r\n            <span className=\"react-form__btn_next__text\">{btnNext}</span>\r\n        </Button>\r\n        {isSubmitting && (\r\n            <CircularProgress\r\n                size={24}\r\n            />\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default SubmitBtn;","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n\r\nexport function useBlockScroll(elRef) {\r\n    const { height, width } = useWindowDimensions();\r\n    let result = false;\r\n\r\n    const isHover = (e) => {\r\n        return result;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const el = elRef.current;\r\n        const textAreas = el.querySelectorAll('textarea');\r\n\r\n        if (el && width > 992) {\r\n            const onWheel = e => {\r\n                e.preventDefault();\r\n                const isMouse = e.deltaX === 0 && Number.isInteger(e.deltaY);\r\n                for(let i=0, l=textAreas.length; i<l; i++){\r\n                    const textArea = textAreas[i];\r\n                    const parent = textArea.parentElement;\r\n                    parent.onmouseover = parent.onmouseout = parent.onmousemove = handler;\r\n                    function handler(event) {\r\n                        if (event.type === 'mouseover') {\r\n                            el.removeEventListener(\"wheel\", onWheel);\r\n                        }\r\n                        if (event.type === 'mouseout') {\r\n                            el.addEventListener(\"wheel\", onWheel);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(isMouse) {\r\n                    if(e.deltaY < 0) {\r\n                        el.scrollTo({\r\n                            left: el.scrollLeft - 100,\r\n                            behavior: \"auto\"\r\n                        });\r\n                    } else {\r\n                        el.scrollTo({\r\n                            left: el.scrollLeft + 100,\r\n                            behavior: \"auto\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaY * 4),\r\n                    });\r\n                }\r\n                if (e.deltaX) {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaX * 4),\r\n                    });\r\n                }\r\n            };\r\n            el.addEventListener(\"wheel\", onWheel);\r\n            return () => el.removeEventListener(\"wheel\", onWheel);\r\n        }\r\n    }, [width]);\r\n\r\n    return { width };\r\n}\r\n\r\nexport function useStepsScroll(elRef) {\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    useEffect(() => {\r\n        const el = elRef.current;\r\n        if (el && width < 992) {\r\n            const onWheel = e => {\r\n                e.preventDefault();\r\n                if(e.deltaY === 100 || e.deltaY === -100) {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaY * 8),\r\n                        behavior: \"auto\"\r\n                    });\r\n                } else {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaY * 4),\r\n                    });\r\n                }\r\n                if (e.deltaX) {\r\n                    el.scrollTo({\r\n                        left: el.scrollLeft + (e.deltaX * 4),\r\n                    });\r\n                }\r\n            };\r\n            el.addEventListener(\"wheel\", onWheel);\r\n            return () => el.removeEventListener(\"wheel\", onWheel);\r\n        }\r\n    }, [width]);\r\n\r\n    return { width };\r\n}\r\n\r\nexport function useCalculateHeight() {\r\n    const [height, setHeight] = useState(0);\r\n    const { width } = useWindowDimensions();\r\n\r\n    useEffect(() => {\r\n        const calculateHeight = () => {\r\n            const containers = document.querySelectorAll(\".fr-slide\");\r\n            for(let i=0, l=containers.length; i<l; i++){\r\n                const container =  containers[i];\r\n                const contentBlocks = container.querySelectorAll(\"div.form_sub > div.MuiGrid-root\");\r\n                const arrayOhHeights = [];\r\n                for(let i=0, l=contentBlocks.length; i<l; i++){\r\n                    arrayOhHeights.push( contentBlocks[i].offsetHeight );\r\n                }\r\n                const result = arrayOhHeights.reduce(function(a, b) {\r\n                    return Math.max(a, b);\r\n                });\r\n                const verticalLines = container.querySelectorAll(\".vertical-line\");\r\n                for(let i=0, l=verticalLines.length; i<l; i++){\r\n                    if (width > 992) {\r\n                        verticalLines[i].style.height = result + \"px\";\r\n                    } else {\r\n                        verticalLines[i].style.height = \"1px\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        calculateHeight();\r\n        window.addEventListener(\"resize\", calculateHeight);\r\n        return () => window.removeEventListener(\"resize\", calculateHeight);\r\n    }, [width]);\r\n\r\n    return { height };\r\n}\r\n\r\nexport function useCalculateDisclaimer() {\r\n    const [height, setHeight] = useState(0);\r\n    const { width } = useWindowDimensions();\r\n\r\n    useEffect(() => {\r\n        const calculateHeightDisclaimer = () => {\r\n            const container = document.querySelector(\".fr-slide\");\r\n            const disclaimer = document.querySelector(\".form_sub_disclaimer__wrap\");\r\n            disclaimer.style.minHeight = \"1px\";\r\n            if (width > 992) {\r\n                disclaimer.style.minHeight = container.offsetHeight + \"px\";\r\n            } else {\r\n                disclaimer.style.minHeight = \"1px\";\r\n            }\r\n        }\r\n        calculateHeightDisclaimer();\r\n        window.addEventListener(\"resize\", calculateHeightDisclaimer);\r\n        return () => window.removeEventListener(\"resize\", calculateHeightDisclaimer);\r\n    }, [width]);\r\n\r\n    return { height };\r\n}\r\n","import React, {useState} from \"react\";\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { InputField } from '../components/FormFields';\r\nimport SubmitBtn from \"../components/SubmitBtn\";\r\nimport {SlideDown} from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\nimport clsx from \"clsx\";\r\nimport {useCalculateHeight} from \"../utils/useWindowDimensions\";\r\n\r\nconst Introduction = ({ formField: { personalData  }, btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, setForm, ...rest}) => {\r\n    const {\r\n        fullName,\r\n        email\r\n    } = personalData;\r\n    const [visible, setVisible] = useState(false);\r\n    useCalculateHeight();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"form_sub__wrap form_sub_introduction__spacing\">\r\n                <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub form_sub_introduction__wrap\">\r\n                    <Grid item xs={12} lg={6} className=\"form_sub_introduction_left py-0\">\r\n                        <Typography variant=\"h1\" gutterBottom>\r\n                            Introduction\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" gutterBottom className=\"introduction__text\">\r\n                            <span className={clsx(!visible&&\"short-text\")}>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop.\r\n                            </span>\r\n                            <SlideDown className={'dropdown-slidedown'}>\r\n                                { visible ? <span>\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop\r\n                                  </span>\r\n                                    : null }\r\n                            </SlideDown>\r\n                            <span className=\"form_sub_introduction__expand\" onClick={() => setVisible(!visible)}>{visible ? 'Show Less' : 'Read More'}</span>\r\n                        </Typography>\r\n                        <div className=\"form_sub_introduction__company\">\r\n                            <Typography variant=\"h3\" gutterBottom>\r\n                                Company\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" gutterBottom className=\"form_sub_introduction__company__text\">\r\n                                <a target=\"_blank\" href=\"https://goo.gl/maps/UWEy1qC9QHLq5G2j6\">Lorem Ipsum, 895623</a>\r\n                            </Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <div className=\"vertical-line\" />\r\n                    <Grid item xs={12} lg={6} className=\"form_sub_introduction py-0\">\r\n                        <InputField name=\"personalData.fullName\" label={fullName.label} required={fullName.required} fullWidth />\r\n                        <InputField name=\"personalData.email\" label={email.label} required={email.required} fullWidth />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n            <SubmitBtn\r\n                onClick={clickSubmitBtn}\r\n                isSubmitting={isSubmitting}\r\n                btnNext={btnNext} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Introduction;\r\n","import React from \"react\";\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStepIconStyles = makeStyles({\r\n    root: {\r\n        color: 'rgba(255, 255, 255, 0.4)',\r\n        fontWeight: 'bold',\r\n        display: 'flex',\r\n        height: 22,\r\n        alignItems: 'center'\r\n    },\r\n    active: {\r\n        color: '#ff4f81',\r\n    },\r\n    circle: {\r\n    },\r\n    completed: {\r\n        marginRight: 10\r\n    }\r\n});\r\n\r\nconst zeroPad = (num, places) => String(num).padStart(places, '0')\r\n\r\nconst AlbaStepIcon = ({ active, completed, icon, width, endForm }) => {\r\n    const classes = useStepIconStyles();\r\n\r\n    if (endForm) {\r\n        return (\r\n            <div\r\n                className={clsx(classes.root, {\r\n                    [classes.active]: active\r\n                })}\r\n            >\r\n                <span className={clsx(classes.completed,\"icon-completed\")} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n            })}\r\n        >\r\n            {width > 767 && completed ? <span className={clsx(classes.completed,\"icon-completed\")} /> : \"\"}\r\n            <div className={clsx(classes.number, \"stepper__label__num\")}>\r\n                {width < 767 && completed ? <span className={clsx(classes.completed,\"icon-completed\")} /> : \"\"}\r\n                {zeroPad(icon, 2)}{width < 767 && <span className=\"steps-col\">/05</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbaStepIcon;\r\n\r\nAlbaStepIcon.propTypes = {\r\n    active: PropTypes.bool,\r\n    completed: PropTypes.bool,\r\n    icon: PropTypes.number\r\n};\r\n","import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport { TextField, InputLabel } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport theme from \"../../theme\";\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            color: \"rgba(255, 255, 255, .6)\",\r\n            padding: \"0 20px\",\r\n            lineHeight: \"44px\",\r\n            height: \"44px\",\r\n            fontSize: \"16px\",\r\n            fontFamily: \"'Exo 2', sans-serif\",\r\n            [theme.breakpoints.up('lg')]: {\r\n                fontSize: \"18px\",\r\n                lineHeight: \"54px\",\r\n                height: \"54px\",\r\n            },\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            borderRadius: 0,\r\n            backgroundColor: \"697d99\",\r\n\r\n            '& fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.1)',\r\n                transition: \"all .5s\",\r\n                borderWidth: 1,\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                borderWidth: 1,\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                borderWidth: 1,\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nexport default function InputFieldNum(props) {\r\n    const { errorText, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n\r\n    function _renderHelperText() {\r\n        const [touched, error] = at(meta, 'touched', 'error');\r\n        if (touched && error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__control\">\r\n            <InputLabel\r\n                className=\"form__label\"\r\n                required={props.required}>\r\n                <span>{props.label}</span>\r\n            </InputLabel>\r\n            <CssTextField\r\n                type=\"number\"\r\n                error={meta.touched && meta.error && true}\r\n                helperText={_renderHelperText()}\r\n                variant=\"outlined\"\r\n                className=\"form__input_num\"\r\n                {...field}\r\n                {...rest}\r\n                label=\"\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {InputField, DatePickerField, SelectField, InputFieldPhone, InputFieldSsn} from '../../components/FormFields';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\nimport InputFieldNum from \"../../components/FormFields/InputFieldNum\";\r\n\r\nconst positions = [\r\n    {\r\n        value: \"\",\r\n        label: \"Select a position\",\r\n        disabled: true\r\n    },\r\n    {\r\n        value: \"QC Checker\",\r\n        label: \"QC Checker\"\r\n    },\r\n    {\r\n        value: \"Maintenance Technician\",\r\n        label: \"Maintenance Technician\"\r\n    },\r\n    {\r\n        value: \"Warehouse Generalist\",\r\n        label: \"Warehouse Generalist\"\r\n    },\r\n    {\r\n        value: \"Material Handler\",\r\n        label: \"Material Handler\"\r\n    },\r\n    {\r\n        value: \"Welding Robot Operator\",\r\n        label: \"Welding Robot Operator\"\r\n    },\r\n    {\r\n        value: \"CNC Set-up Opr.\",\r\n        label: \"CNC Set-up Opr.\"\r\n    },\r\n    {\r\n        value: \"Robot Set-up Opr.\",\r\n        label: \"Robot Set-up Opr.\"\r\n    },\r\n    {\r\n        value: \"Machine Operator\",\r\n        label: \"Machine Operator\"\r\n    }\r\n]\r\n\r\nconst PersonalData_01 = ({ formField : {\r\n    personalData: {\r\n        position,\r\n        positionDate,\r\n        salary,\r\n        lastNumSsn,\r\n        email,\r\n        firstName,\r\n        middleName,\r\n        lastName,\r\n        street,\r\n        city,\r\n        state,\r\n        zip,\r\n        phone,\r\n        phoneOther,\r\n        age\r\n    }\r\n}}) => {\r\n    const fields = Object.values({\r\n        position,\r\n        positionDate,\r\n        salary,\r\n        lastNumSsn,\r\n        email,\r\n        firstName,\r\n        middleName,\r\n        lastName,\r\n        street,\r\n        city,\r\n        state,\r\n        zip,\r\n        phone,\r\n        phoneOther,\r\n        age\r\n    });\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <div className=\"form_sub form_sub__container line-right\">\r\n            <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_personal-data__wrap\">\r\n                <Grid container direction=\"row\" spacing={isMobile?1:3} className=\"form_sub_personal-data_01 my-0 py-0\">\r\n                    <Grid item className=\"py-0\" xs={12}>\r\n                        <Typography variant=\"h1\" gutterBottom>\r\n                            Personal Data\r\n                        </Typography>\r\n                    </Grid>\r\n                    {fields.map((field) => {\r\n                        if(field.name === 'position') {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <SelectField\r\n                                        name={`personalData.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        data={positions}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.name === 'positionDate') {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap\">\r\n                                    <DatePickerField name={`personalData.${field.name}`} label={field.label} required={field.required} fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"phone\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <InputFieldPhone\r\n                                        name={`personalData.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"number\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <InputFieldNum\r\n                                        name={`personalData.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"ssn\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <InputFieldSsn\r\n                                        name={`personalData.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                <InputField name={`personalData.${field.name}`} label={field.label} required={field.required} fullWidth/>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                    <Grid item xs={12} className=\"py-0\">\r\n                        <div className=\"form_sub_personal-data_01__text\">\r\n                            <p>\r\n                                This information will be used only for child labor law purposes\r\n                            </p>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalData_01;","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {\r\n    InputField,\r\n    DatePickerField,\r\n    CheckboxField,\r\n    MultilineTextField,\r\n} from '../../components/FormFields';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst PersonalData_02 = ({ formField : {\r\n    personalData: {\r\n        availability: {\r\n            shiftFirst,\r\n            shiftSecond,\r\n            shiftThird,\r\n            comment,\r\n            weekends,\r\n            overtime,\r\n            ableStartDate,\r\n            howLearnAboutCompany,\r\n        }\r\n    }\r\n}}) => {\r\n    const fields = Object.values({\r\n        shiftFirst,\r\n        shiftSecond,\r\n        shiftThird,\r\n        comment,\r\n        weekends,\r\n        overtime,\r\n        ableStartDate,\r\n        howLearnAboutCompany,\r\n    });\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <div className=\"form_sub form_sub__container line-right\">\r\n            <Grid container direction=\"row\" className=\"form_sub_personal-data__wrap\">\r\n                <Grid container direction=\"row\" alignItems=\"flex-end\" spacing={isMobile?1:3} className=\"form_sub_personal-data_01 py-0\">\r\n                    <Grid item className=\"py-0\" xs={12}>\r\n                        <Typography variant=\"h2\" gutterBottom>\r\n                            Availability\r\n                        </Typography>\r\n                    </Grid>\r\n                    {fields.map((field) => {\r\n                        if(field.type === \"checkbox\") {\r\n                            return [\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <CheckboxField\r\n                                        name={`personalData.availability.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>,\r\n                                field.note && <Grid key={`${field.name}-note`} item xs={12} className=\"form_sub_personal-data_02__text\">\r\n                                    <p>\r\n                                        {field.note}\r\n                                    </p>\r\n                                </Grid>\r\n                                ,\r\n                                field.break && <div className=\"break\"/>\r\n                            ]\r\n\r\n                        }\r\n                        if(field.type === \"textarea\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <MultilineTextField\r\n                                        name={`personalData.availability.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        rowsMax={field.rows}\r\n                                        rows={field.rows}\r\n                                        fullWidth />\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"date\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                                    <DatePickerField\r\n                                        name={`personalData.availability.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                <InputField\r\n                                    name={`personalData.availability.${field.name}`}\r\n                                    label={field.label}\r\n                                    required={field.required}\r\n                                    fullWidth/>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalData_02;","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {\r\n    InputField,\r\n    DatePickerField,\r\n    CheckboxField,\r\n    MultilineTextField\r\n} from '../../components/FormFields';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst PersonalData_03 = ({ formField : {\r\n    personalData: {\r\n        availability: {\r\n            everWorkedForCompany,\r\n            knowAnyoneWhoWorks,\r\n            legallyAuthorized,\r\n            sponsorshipRequire,\r\n        },\r\n        military: {\r\n            militaryServed\r\n        }\r\n    }\r\n}}) => {\r\n    const fields = Object.values({\r\n        everWorkedForCompany,\r\n        knowAnyoneWhoWorks,\r\n        legallyAuthorized,\r\n        sponsorshipRequire,\r\n        militaryServed\r\n    });\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <div className=\"form_sub form_sub__container\">\r\n            <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_personal-data__wrap\">\r\n                <Grid container direction=\"row\" alignItems=\"flex-end\" spacing={isMobile?1:3} className=\"form_sub_personal-data_01 py-0\">\r\n                    {fields.map((field) => {\r\n                        if(field.type === \"checkbox\") {\r\n                            return [\r\n                                field.name === \"militaryServed\" && <Grid item className=\"py-0\" xs={12}>\r\n                                    <Typography variant=\"h2\" gutterBottom>\r\n                                        Military\r\n                                    </Typography>\r\n                                </Grid>,\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <CheckboxField\r\n                                        name={`personalData.availability.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>,\r\n                                field.note && <Grid key={`${field.name}-note`} item xs={12} className=\"form_sub_personal-data_02__text\">\r\n                                    <p>\r\n                                        {field.note}\r\n                                    </p>\r\n                                </Grid>\r\n                                ,\r\n                                field.break && <div className=\"break break_line-bottom form_sub_personal-data_02__break\"/>\r\n                            ]\r\n\r\n                        }\r\n                        if(field.type === \"textarea\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <MultilineTextField\r\n                                        name={`personalData.availability.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        rowsMax={field.rows}\r\n                                        rows={field.rows}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"date\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                                    <DatePickerField\r\n                                        name={`personalData.availability.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                <InputField\r\n                                    name={`personalData.availability.${field.name}`}\r\n                                    label={field.label}\r\n                                    required={field.required}\r\n                                    fullWidth/>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalData_03;","import React, { useRef } from 'react';\r\nimport PersonalData_01 from './PersonalData_01';\r\nimport PersonalData_02 from './PersonalData_02';\r\nimport PersonalData_03 from './PersonalData_03';\r\nimport SubmitBtn from \"../../components/SubmitBtn\";\r\nimport {useBlockScroll, useCalculateHeight} from \"../../utils/useWindowDimensions\";\r\n\r\nconst PersonalData = ({ btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, ...props}) => {\r\n    const elRef = useRef();\r\n    useBlockScroll(elRef);\r\n    useCalculateHeight();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div ref={elRef} className=\"form_sub_personal-data\">\r\n                <div className=\"form_sub__center\">\r\n                    <PersonalData_01 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <PersonalData_02 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <PersonalData_03 {...props} />\r\n                </div>\r\n\r\n                <SubmitBtn\r\n                    onClick={clickSubmitBtn}\r\n                    isSubmitting={isSubmitting}\r\n                    btnNext={btnNext} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PersonalData;","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {\r\n    InputField,\r\n    DatePickerField,\r\n    CheckboxField,\r\n    MultilineTextField\r\n} from '../../components/FormFields';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst Education_01 = ({ formField : {\r\n    education: {\r\n        highSchool: {\r\n            address,\r\n            graduate,\r\n            institution,\r\n            license,\r\n            comment\r\n        }\r\n    }\r\n}}) => {\r\n    const fields = Object.values({\r\n        address,\r\n        graduate,\r\n        institution,\r\n        license,\r\n        comment\r\n    });\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"form_sub form_sub__container line-right\">\r\n            <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_education__wrap\">\r\n                <Grid container direction=\"row\" spacing={isMobile?1:3} className=\"form_sub_education_01 py-0 my-0\">\r\n                    <Grid item className=\"py-0\" xs={12}>\r\n                        <Typography variant=\"h1\" gutterBottom>\r\n                            Education\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} className=\"py-0\">\r\n                        <div className=\"form_sub_education_01__text\">\r\n                            <p>\r\n                                Describe any educational degrees, skills, training or experience you believe are relevant to the job applied for:\r\n                            </p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item className=\"py-0\" xs={12}>\r\n                        <Typography variant=\"h2\" gutterBottom>\r\n                            High School\r\n                        </Typography>\r\n                    </Grid>\r\n                    {fields.map((field) => {\r\n                        if(field.type === \"checkbox\") {\r\n                            return [\r\n                                field.name === \"militaryServed\" && <Grid item className=\"py-0\" xs={12}>\r\n                                    <Typography variant=\"h2\" gutterBottom>\r\n                                        Military\r\n                                    </Typography>\r\n                                </Grid>,\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <CheckboxField\r\n                                        name={`education.highSchool.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>,\r\n                                field.note && <Grid key={`${field.name}-note`} item xs={12} className=\"form_sub_education_01__text\">\r\n                                    <p>\r\n                                        {field.note}\r\n                                    </p>\r\n                                </Grid>\r\n                                ,\r\n                                field.break && <div className=\"break break_line-bottom form_sub_education_01__break\"/>\r\n                            ]\r\n\r\n                        }\r\n                        if(field.type === \"textarea\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <MultilineTextField\r\n                                        name={`education.highSchool.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        rowsMax={field.rows}\r\n                                        rows={field.rows}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"date\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                                    <DatePickerField\r\n                                        name={`education.highSchool.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                <InputField\r\n                                    name={`education.highSchool.${field.name}`}\r\n                                    label={field.label}\r\n                                    required={field.required}\r\n                                    fullWidth/>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Education_01;","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {\r\n    InputField,\r\n    DatePickerField,\r\n    CheckboxField,\r\n    MultilineTextField\r\n} from '../../components/FormFields';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst Education_02 = ({ formField : {\r\n    education: {\r\n        university: {\r\n            address,\r\n            graduate,\r\n            institution,\r\n            license,\r\n            comment\r\n        }\r\n    }\r\n}}) => {\r\n    const fields = Object.values({\r\n        address,\r\n        graduate,\r\n        institution,\r\n        license,\r\n        comment\r\n    });\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <div className=\"form_sub form_sub__container line-right\">\r\n            <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_education__wrap\">\r\n                <Grid container direction=\"row\" spacing={isMobile?1:3} className=\"form_sub_education_01 py-0 my-0\">\r\n                    <Grid item className=\"py-0\" xs={12}>\r\n                        <Typography variant=\"h2\" gutterBottom>\r\n                            College or University\r\n                        </Typography>\r\n                    </Grid>\r\n                    {fields.map((field) => {\r\n                        if(field.type === \"checkbox\") {\r\n                            return [\r\n                                field.name === \"militaryServed\" && <Grid item className=\"py-0\" xs={12}>\r\n                                    <Typography variant=\"h2\" gutterBottom>\r\n                                        Military\r\n                                    </Typography>\r\n                                </Grid>,\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <CheckboxField\r\n                                        name={`education.university.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>,\r\n                                field.note && <Grid key={`${field.name}-note`} item xs={12} className=\"form_sub_education_01__text\">\r\n                                    <p>\r\n                                        {field.note}\r\n                                    </p>\r\n                                </Grid>\r\n                                ,\r\n                                field.break && <div className=\"break break_line-bottom form_sub_education_01__break\"/>\r\n                            ]\r\n\r\n                        }\r\n                        if(field.type === \"textarea\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <MultilineTextField\r\n                                        name={`education.university.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        rowsMax={field.rows}\r\n                                        rows={field.rows}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"date\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                                    <DatePickerField\r\n                                        name={`education.university.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                <InputField\r\n                                    name={`education.university.${field.name}`}\r\n                                    label={field.label}\r\n                                    required={field.required}\r\n                                    fullWidth/>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Education_02;","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {\r\n    InputField,\r\n    DatePickerField,\r\n    CheckboxField,\r\n    MultilineTextField\r\n} from '../../components/FormFields';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst Education_03 = ({ formField : {\r\n    education: {\r\n        technical: {\r\n            address,\r\n            graduate,\r\n            institution,\r\n            license,\r\n            comment\r\n        }\r\n    }\r\n}}) => {\r\n    const fields = Object.values({\r\n        address,\r\n        graduate,\r\n        institution,\r\n        license,\r\n        comment\r\n    });\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <div className=\"form_sub form_sub__container line-right\">\r\n            <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_education__wrap\">\r\n                <Grid container direction=\"row\" spacing={isMobile?1:3} className=\"form_sub_education_01 py-0 my-0\">\r\n                    <Grid item className=\"py-0\" xs={12}>\r\n                        <Typography variant=\"h2\" gutterBottom>\r\n                            Technical / Ged\r\n                        </Typography>\r\n                    </Grid>\r\n                    {fields.map((field) => {\r\n                        if(field.type === \"checkbox\") {\r\n                            return [\r\n                                field.name === \"militaryServed\" && <Grid item className=\"py-0\" xs={12}>\r\n                                    <Typography variant=\"h2\" gutterBottom>\r\n                                        Military\r\n                                    </Typography>\r\n                                </Grid>,\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <CheckboxField\r\n                                        name={`education.technical.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>,\r\n                                field.note && <Grid key={`${field.name}-note`} item xs={12} className=\"form_sub_education_01__text\">\r\n                                    <p>\r\n                                        {field.note}\r\n                                    </p>\r\n                                </Grid>\r\n                                ,\r\n                                field.break && <div className=\"break break_line-bottom form_sub_education_01__break\"/>\r\n                            ]\r\n\r\n                        }\r\n                        if(field.type === \"textarea\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <MultilineTextField\r\n                                        name={`education.technical.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        rowsMax={field.rows}\r\n                                        rows={field.rows}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"date\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                                    <DatePickerField\r\n                                        name={`education.technical.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                <InputField\r\n                                    name={`education.technical.${field.name}`}\r\n                                    label={field.label}\r\n                                    required={field.required}\r\n                                    fullWidth/>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Education_03;","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {\r\n    InputField,\r\n    DatePickerField,\r\n    CheckboxField,\r\n    MultilineTextField\r\n} from '../../components/FormFields';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst Education_04 = ({ formField : {\r\n    education: {\r\n        other: {\r\n            address,\r\n            graduate,\r\n            institution,\r\n            license,\r\n            comment\r\n        }\r\n    }\r\n}}) => {\r\n    const fields = Object.values({\r\n        address,\r\n        graduate,\r\n        institution,\r\n        license,\r\n        comment\r\n    });\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <div className=\"form_sub form_sub__container last-child\">\r\n            <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_education__wrap\">\r\n                <Grid container direction=\"row\" spacing={isMobile?1:3} className=\"form_sub_education_01 py-0 my-0\">\r\n                    <Grid item className=\"py-0\" xs={12}>\r\n                        <Typography variant=\"h2\" gutterBottom>\r\n                            Licenses / Certification / Other\r\n                        </Typography>\r\n                    </Grid>\r\n                    {fields.map((field) => {\r\n                        if(field.type === \"checkbox\") {\r\n                            return [\r\n                                field.name === \"militaryServed\" && <Grid item className=\"py-0\" xs={12}>\r\n                                    <Typography variant=\"h2\" gutterBottom>\r\n                                        Military\r\n                                    </Typography>\r\n                                </Grid>,\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <CheckboxField\r\n                                        name={`education.other.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>,\r\n                                field.note && <Grid key={`${field.name}-note`} item xs={12} className=\"form_sub_education_01__text\">\r\n                                    <p>\r\n                                        {field.note}\r\n                                    </p>\r\n                                </Grid>\r\n                                ,\r\n                                field.break && <div className=\"break break_line-bottom form_sub_education_01__break\"/>\r\n                            ]\r\n\r\n                        }\r\n                        if(field.type === \"textarea\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                    <MultilineTextField\r\n                                        name={`education.other.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        rowsMax={field.rows}\r\n                                        rows={field.rows}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        if(field.type === \"date\") {\r\n                            return (\r\n                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                                    <DatePickerField\r\n                                        name={`education.other.${field.name}`}\r\n                                        label={field.label}\r\n                                        required={field.required}\r\n                                        fullWidth/>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                <InputField\r\n                                    name={`education.other.${field.name}`}\r\n                                    label={field.label}\r\n                                    required={field.required}\r\n                                    fullWidth/>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Education_04;","import React, { useRef } from 'react';\r\nimport Education_01 from \"./Education_01\";\r\nimport Education_02 from \"./Education_02\";\r\nimport Education_03 from \"./Education_03\";\r\nimport Education_04 from \"./Education_04\";\r\nimport SubmitBtn from \"../../components/SubmitBtn\";\r\nimport {useBlockScroll, useCalculateHeight} from \"../../utils/useWindowDimensions\";\r\n\r\nconst Education = ({ btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, ...props}) => {\r\n    const elRef = useRef();\r\n    useBlockScroll(elRef);\r\n    useCalculateHeight();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div ref={elRef} className=\"form_sub_education\">\r\n                <div className=\"form_sub__center\">\r\n                    <Education_01 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <Education_02 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <Education_03 {...props} />\r\n                    <div className=\"vertical-line\" />\r\n                    <Education_04 {...props} />\r\n                </div>\r\n\r\n                <SubmitBtn\r\n                    onClick={clickSubmitBtn}\r\n                    isSubmitting={isSubmitting}\r\n                    btnNext={btnNext} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\nimport {Grid, Typography, Button} from '@material-ui/core';\r\nimport {\r\n    InputField,\r\n    DatePickerField,\r\n    CheckboxField,\r\n    MultilineTextField,\r\n    InputFieldPhone\r\n} from '../../components/FormFields';\r\nimport { FieldArray } from \"formik\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst EmploymentHistory_01 = ({ formField : {\r\n    employers\r\n}, values }) => {\r\n    const fields = Object.values(employers[0]);\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <FieldArray\r\n            name=\"employers\"\r\n            render={arrayHelpers => (\r\n                <React.Fragment>\r\n                    {values.employers.map((employer, index) => [\r\n                        <div className=\"vertical-line\" />,\r\n                        <div key={index} className=\"form_sub form_sub__container\">\r\n                            <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_employment__wrap\">\r\n                                <Grid container direction=\"row\" spacing={isMobile?1:3} className=\"form_sub_employment_01 py-0\">\r\n                                    <Grid item className=\"py-0\" xs={12}>\r\n                                        <Typography variant=\"h2\" gutterBottom>\r\n                                            Employer #{index+1}\r\n                                        </Typography>\r\n                                        {index !== 0 &&(\r\n                                            <div\r\n                                                onClick={() => arrayHelpers.remove(index)}\r\n                                                className=\"fr-btn fr-btn-close fr-btn-dark\">\r\n                                                <span className=\"close-icon\"></span>\r\n                                            </div>\r\n                                        )}\r\n                                    </Grid>\r\n\r\n                                    {fields.map((field) => {\r\n                                        if(field.type === \"checkbox\") {\r\n                                            return (\r\n                                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                                    <CheckboxField\r\n                                                        name={`employers.${index}.${field.name}`}\r\n                                                        label={field.label}\r\n                                                        required={field.required}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </Grid>\r\n                                            )\r\n                                        }\r\n                                        if(field.type === \"textarea\") {\r\n                                            return (\r\n                                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                                    <MultilineTextField\r\n                                                        name={`employers.${index}.${field.name}`}\r\n                                                        label={field.label}\r\n                                                        required={field.required}\r\n                                                        rowsMax={field.rows}\r\n                                                        rows={field.rows}\r\n                                                        fullWidth/>\r\n                                                </Grid>\r\n                                            )\r\n                                        }\r\n                                        if(field.type === \"date\") {\r\n                                            return (\r\n                                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                                                    <DatePickerField\r\n                                                        name={`employers.${index}.${field.name}`}\r\n                                                        label={field.label}\r\n                                                        required={field.required}\r\n                                                        fullWidth/>\r\n                                                </Grid>\r\n                                            )\r\n                                        }\r\n                                        if(field.type === \"phone\") {\r\n                                            return (\r\n                                                <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                                    <InputFieldPhone\r\n                                                        name={`employers.${index}.${field.name}`}\r\n                                                        label={field.label}\r\n                                                        required={field.required}\r\n                                                        fullWidth/>\r\n                                                </Grid>\r\n                                            )\r\n                                        }\r\n                                        return (\r\n                                            <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                                                <InputField\r\n                                                    name={`employers.${index}.${field.name}`}\r\n                                                    label={field.label}\r\n                                                    required={field.required}\r\n                                                    fullWidth/>\r\n                                            </Grid>\r\n                                        )\r\n                                    })}\r\n                                    {index === values.employers.length-1 && (\r\n                                        <Grid item xs={12} className=\"py-0\">\r\n                                            <Button\r\n                                                className=\"fr-btn fr-btn-default react-form__btn_add\"\r\n                                                onClick={() => arrayHelpers.push({\r\n                                                    companyName: \"\",\r\n                                                    staffingAgency: false,\r\n                                                    address: \"\",\r\n                                                    city: \"\",\r\n                                                    state: \"\",\r\n                                                    supervisorName: \"\",\r\n                                                    companyPhone: \"\",\r\n                                                    mayWeContact: \"\",\r\n                                                    dateEmployedFrom: \"\",\r\n                                                    dateEmployedTo: \"\",\r\n                                                    lastWage: \"\",\r\n                                                    describeJob: \"\",\r\n                                                    reasonLeaving: \"\"\r\n                                                })}\r\n                                            >\r\n                                                <span className=\"fr-btn-title\">Add an Employer</span>\r\n                                                <span className=\"react-form__btn_add__cover\"/>\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    ])}\r\n                </React.Fragment>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default EmploymentHistory_01;","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport {\r\n    CheckboxField,\r\n    DatePickerField,\r\n    InputField,\r\n    InputFieldPhone,\r\n    MultilineTextField\r\n} from \"../../components/FormFields\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst ProfessionalReferencesTwin = ({ fields, index, double, arrayHelpers }) => {\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n    return (\r\n        <Grid container direction=\"row\" spacing={isMobile?1:3} className={clsx(double&&\"double\", \"form_sub_references\")}>\r\n            {index !== 0 &&(\r\n                <div\r\n                    onClick={() => arrayHelpers.remove(index)}\r\n                    className=\"fr-btn fr-btn-close fr-btn-dark\">\r\n                    <span className=\"close-icon\"></span>\r\n                </div>\r\n            )}\r\n            {fields.map((field, i) => {\r\n                if(field.type === \"checkbox\") {\r\n                    return (\r\n                        <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                            <CheckboxField\r\n                                name={`references.${index}.${field.name}`}\r\n                                label={field.label}\r\n                                required={field.required}\r\n                                fullWidth\r\n                            />\r\n                        </Grid>)\r\n\r\n                }\r\n                if(field.type === \"textarea\") {\r\n                    return (\r\n                        <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                            <MultilineTextField\r\n                                name={`references.${index}.${field.name}`}\r\n                                label={field.label}\r\n                                required={field.required}\r\n                                rowsMax={field.rows}\r\n                                rows={field.rows}\r\n                                fullWidth/>\r\n                        </Grid>\r\n                    )\r\n                }\r\n                if(field.type === \"date\") {\r\n                    return (\r\n                        <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0 form__picker__wrap top\">\r\n                            <DatePickerField\r\n                                name={`references.${index}.${field.name}`}\r\n                                label={field.label}\r\n                                required={field.required}\r\n                                fullWidth/>\r\n                        </Grid>\r\n                    )\r\n                }\r\n                if(field.type === \"phone\") {\r\n                    return (\r\n                        <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                            <InputFieldPhone\r\n                                name={`references.${index}.${field.name}`}\r\n                                label={field.label}\r\n                                required={field.required}\r\n                                fullWidth/>\r\n                        </Grid>\r\n                    )\r\n                }\r\n                return (\r\n                    <Grid key={field.name} item xs={12} sm={field.col} className=\"py-0\">\r\n                        <InputField\r\n                            name={`references.${index}.${field.name}`}\r\n                            label={field.label}\r\n                            required={field.required}\r\n                            fullWidth/>\r\n                    </Grid>\r\n                )\r\n            })}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ProfessionalReferencesTwin;","import React from 'react';\r\nimport {Button, Grid, Typography} from '@material-ui/core';\r\nimport { FieldArray } from \"formik\";\r\nimport ProfessionalReferencesTwin from \"./ProfessionalReferencesTwin\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst EmploymentHistory_02 = ({ formField : {\r\n    references\r\n}, values }) => {\r\n    const fields = Object.values(references[0]);\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    const referencesTwin = [];\r\n\r\n    values.references.forEach((item, index) => {\r\n        const firstRef = values.references[index - 1];\r\n        const secondRef = values.references[index];\r\n\r\n        if (index % 2) {\r\n            referencesTwin.push([{...firstRef, index: index - 1}, {...secondRef, index: index}]);\r\n        }\r\n\r\n        if (values.references.length % 2 && index === values.references.length-1) {\r\n            referencesTwin.push([{...secondRef, index: index}]);\r\n        }\r\n\r\n    });\r\n\r\n    return (\r\n            <FieldArray\r\n                name=\"references\"\r\n                render={arrayHelpers => (\r\n                    <React.Fragment>\r\n                        {referencesTwin.map((reference, index) => {\r\n                            return [\r\n                                <div className=\"vertical-line\" />,\r\n                                <div key={index} className=\"form_sub form_sub__container\">\r\n                                    <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_employment__wrap\">\r\n                                        <Grid container direction=\"row\" spacing={isMobile?1:3} className=\"form_sub_employment_01 py-0\">\r\n                                            <Grid item className=\"py-0\" xs={12}>\r\n                                                <Typography variant=\"h2\" gutterBottom>\r\n                                                    Professional References\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} className=\"py-0\">\r\n                                                <div className=\"form_sub_references__text\">\r\n                                                    <p>\r\n                                                        Please list three individuals unrelated to you with whom you have worked who know your qualifications for this position\r\n                                                    </p>\r\n                                                </div>\r\n                                            </Grid>\r\n                                    <Grid item className=\"py-0\" xs={12}>\r\n                                        <ProfessionalReferencesTwin arrayHelpers={arrayHelpers} double={false} fields={fields} index={reference[0].index} />\r\n                                        {reference[1]&& <ProfessionalReferencesTwin arrayHelpers={arrayHelpers} double={true} fields={fields} index={reference[1].index} />}\r\n                                    </Grid>\r\n                                    {index === referencesTwin.length-1 && (\r\n                                        <Grid item xs={12} className=\"py-0\">\r\n                                            <Button\r\n                                                className=\"fr-btn fr-btn-default react-form__btn_add\"\r\n                                                onClick={() => arrayHelpers.push({\r\n                                                    name: \"\",\r\n                                                    address: \"\",\r\n                                                    phone: \"\",\r\n                                                    relationship: \"\"\r\n                                                })}\r\n                                            >\r\n                                                <span className=\"fr-btn-title\">Add References</span>\r\n                                                <span className=\"react-form__btn_add__cover\"/>\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    )}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            ]\r\n                        })}\r\n                    </React.Fragment>\r\n                )}\r\n            />\r\n    )\r\n}\r\n\r\nexport default EmploymentHistory_02;","import React from 'react';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport { Field } from 'formik';\r\nimport {CheckboxField, InputFileUpload} from \"../../components/FormFields\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../../theme\";\r\n\r\nconst EmploymentHistory_00 = ({ formField : {\r\n    resume,\r\n    workHistory\r\n}, values }) => {\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <div className=\"form_sub form_sub__container form_sub_employment_00\">\r\n            <Grid container direction=\"row\" alignItems=\"center\" className=\"form_sub_employment__wrap\">\r\n                <Grid container direction=\"row\" spacing={isMobile?1:3} className=\"form_sub_employment_01 py-0 my-0\">\r\n                    <Grid item className=\"py-0\" xs={12}>\r\n                        <Typography variant=\"h1\" gutterBottom>\r\n                            Employment history\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} className=\"py-0\">\r\n                        <div className=\"form_sub_employment_00__text\">\r\n                            <p className=\"my-0\">\r\n                                Please complete for all full-time or part-time employment <b>beginning with most recent employer (including temporary jobs)</b>.\r\n                                You may include as part of your employment history any verified work performed on a volunteer basis.\r\n                                All applicants should start with their most recent job, include military assignments and voluntary employment\r\n                                and provide ten (10) years of history. (A separate sheet may be attached.) You must explain any gaps in your\r\n                                employment history.\r\n                            </p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} className=\"py-0\">\r\n                        <Field\r\n                            name={resume.name}\r\n                            label={resume.label}\r\n                            required={resume.required}\r\n                            component={InputFileUpload}\r\n                            value={values.resume}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid key={workHistory.name} item xs={12} sm={workHistory.col} className=\"py-0 form_sub_employment_00__work-history\">\r\n                        <CheckboxField\r\n                            name={workHistory.name}\r\n                            label={workHistory.label}\r\n                            required={workHistory.required}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmploymentHistory_00;","import React, { useRef } from 'react';\r\nimport EmploymentHistory_01 from \"./EmploymentHistory_01\";\r\nimport EmploymentHistory_02 from \"./EmploymentHistory_02\";\r\nimport EmploymentHistory_00 from \"./EmploymentHistory_00\";\r\nimport SubmitBtn from \"../../components/SubmitBtn\";\r\nimport {useBlockScroll, useCalculateHeight} from \"../../utils/useWindowDimensions\";\r\n\r\nconst EmploymentHistory = ({\r\n    btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, ...props}) => {\r\n    const elRef = useRef();\r\n    useBlockScroll(elRef);\r\n    useCalculateHeight();\r\n    const workHistory = props?.values?.workHistory || false;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div ref={elRef} className=\"form_sub_employment\">\r\n                <div className=\"form_sub__center\">\r\n                    <EmploymentHistory_00 {...props} />\r\n                    {workHistory && <EmploymentHistory_01 {...props} />}\r\n                    <EmploymentHistory_02 {...props} />\r\n                </div>\r\n\r\n                <SubmitBtn\r\n                    onClick={clickSubmitBtn}\r\n                    isSubmitting={isSubmitting}\r\n                    btnNext={btnNext} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EmploymentHistory;","import React from \"react\";\r\nimport {Button, Grid, Typography} from '@material-ui/core';\r\nimport { CheckboxMiniField } from '../components/FormFields';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport theme from \"../theme\";\r\n\r\nconst Disclaimer = ({btnSettings: { clickSubmitBtn, isSubmitting, btnNext }, formField: { iAgree }, values}) => {\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('lg'), {\r\n        defaultMatches: true\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"form_sub_disclaimer__wrap\">\r\n                <div className=\"form_sub_disclaimer\">\r\n                    <Grid container direction=\"row\" alignItems=\"center\" spacing={isMobile?1:3} className=\"form_sub\">\r\n                        <Grid item xs={12} className=\"py-0\">\r\n                            <div className=\"form_sub_disclaimer__text\">\r\n                                <Typography variant=\"h1\" gutterBottom>\r\n                                    APPLICANT’S ACKNOWLEDGMENT\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" gutterBottom>\r\n                                  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n                                  <br/><br/>\r\n                                  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n                                  <br/><br/>\r\n                                  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n                                  <br/><br/>\r\n                                  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"py-0\">\r\n                            <CheckboxMiniField value={values.iAgree} name={iAgree.name} label={iAgree.label} required={iAgree.required} fullWidth />\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"py-0\">\r\n                            <Button\r\n                                type=\"submit\"\r\n                                onClick={clickSubmitBtn}\r\n                                isSubmitting={isSubmitting}\r\n                                className=\"fr-btn fr-btn-default form_sub_disclaimer__btn\"\r\n                            >\r\n                                <span className=\"fr-btn-title\">{btnNext}</span>\r\n                                <span className=\"react-form__btn_add__cover\"/>\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Disclaimer;\r\n","import React from \"react\";\r\nimport {Button, Grid, Typography} from '@material-ui/core';\r\n\r\nconst ThankYou = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container direction=\"row\" alignItems=\"center\" spacing={10} className=\"form_sub form_sub_thank form_sub__center\">\r\n                <Grid item xs={12} className=\"py-0\">\r\n                    <div className=\"form_sub_thank__text\">\r\n                        <Typography variant=\"h1\" className=\"form_sub_thank__title\" gutterBottom>\r\n                            THANK YOU!\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" gutterBottom>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"py-0\">\r\n                    <a\r\n                        href={window.location.href.replace('/careers/application-form/', '')}\r\n                        className=\"fr-btn fr-btn-default form_sub_thank__btn\"\r\n                    >\r\n                        <span className=\"fr-btn-title\">Go Home</span>\r\n                        <span className=\"react-form__btn_add__cover\"/>\r\n                    </a>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ThankYou;\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { useForm, useStep } from \"react-hooks-helper\";\r\nimport clsx from 'clsx';\r\nimport {\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Grid\r\n} from '@material-ui/core';\r\nimport { Formik, Form } from 'formik';\r\nimport checkoutFormModel from '../components/FormModel/formModel';\r\nimport formInitialValues from \"../components/FormModel/formInitialValues\";\r\nimport validationSchema from \"../components/FormModel/validationSchema\";\r\nimport { addPost } from \"../utils\";\r\nimport Introduction from \"./Introduction\";\r\nimport AlbaStepIcon from \"../components/Stepper/AlbaStepIcon\";\r\nimport PersonalData from \"./PersonalData/PersonalData\";\r\nimport Education from \"./Education/Education\";\r\nimport EmploymentHistory from \"./EmploymentHistory/EmploymentHistory\";\r\nimport Disclaimer from \"./Disclaimer\";\r\nimport ThankYou from \"./ThankYou\";\r\nimport {useStepsScroll} from \"../utils/useWindowDimensions\";\r\nimport FormikOnError from \"./FormikOnError\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nconst { formId, formField } = checkoutFormModel;\r\n\r\nconst steps = [\r\n    { id: \"introduction\", title: \"Introduction\", btnNext: \"Register\" },\r\n    { id: \"personalData\", title: \"Personal Data\", btnNext: \"Save & Next Page\" },\r\n    { id: \"education\", title: \"Education\", btnNext: \"Save & Next Page\" },\r\n    { id: \"employmentHistory\", title: \"Employment History\", btnNext: \"Save & Next Page\" },\r\n    { id: \"disclaimer\", title: \"Disclaimer\", btnNext: \"Finish & Send\" },\r\n    { id: \"end\", title: \"Thank you!\", btnNext: \"Go Home\" }\r\n];\r\n\r\nconst MultiStepForm = () => {\r\n    const [formData, setForm] = useForm(formInitialValues);\r\n    const { step, index: stepIndex, navigation } = useStep({ initialStep: 0, steps });\r\n    const { go } = navigation;\r\n    const currentValidationSchema = validationSchema[stepIndex];\r\n    const { id: stepId, btnNext } = step;\r\n    const [completed, setCompleted] = useState([false, false, false, false, false]);\r\n    const [unlockedSteps, setUnlockedSteps] = useState([true, false, false, false, false]);\r\n    const checkerArray = arr => arr.every(v => v === true);\r\n    const elRef = useRef();\r\n    const elActiveStep = useRef();\r\n    const { width } = useStepsScroll(elRef);\r\n    const props = { formData, setForm, navigation, formField };\r\n\r\n    const setUncompleted = () => {\r\n        const newCompleted = completed;\r\n        newCompleted[stepIndex] = false;\r\n        setCompleted([...newCompleted]);\r\n    }\r\n\r\n    const handleSubmit = (values, actions) => {\r\n        const newCompleted = completed;\r\n        const newUnlockedSteps = unlockedSteps;\r\n        newCompleted[stepIndex] = true;\r\n        newUnlockedSteps[stepIndex+1] = true;\r\n        setCompleted([...newCompleted]);\r\n        setUnlockedSteps([...newUnlockedSteps]);\r\n\r\n        if(checkerArray(completed)) {\r\n            if(completed.length === steps.length - 1 && checkerArray(completed)) {\r\n                // addPost(values);\r\n                console.log(\"Finish.\");\r\n            }\r\n            go(5);\r\n        } else {\r\n            actions.setTouched({});\r\n            actions.setSubmitting(false);\r\n            if(stepIndex + 1 === steps.length-1 && !checkerArray(completed)) {\r\n                const index = completed.findIndex(element => element !== true);\r\n                go(index);\r\n            } else {\r\n                go(stepIndex + 1);\r\n            }\r\n            if (width < 992) {\r\n                window.scrollTo( 0, 0 );\r\n            }\r\n        }\r\n    }\r\n\r\n    const renderStepContent = (id, values, clickSubmitBtn, isSubmitting, btnNext) => {\r\n        const btnSettings = {clickSubmitBtn, isSubmitting, btnNext};\r\n        switch (id) {\r\n            case \"introduction\":\r\n                return <Introduction {...props} btnSettings={btnSettings} />;\r\n            case \"personalData\":\r\n                return <PersonalData {...props} btnSettings={btnSettings} />;\r\n            case \"education\":\r\n                return <Education {...props} btnSettings={btnSettings} />;\r\n            case \"employmentHistory\":\r\n                return <EmploymentHistory {...props} values={values} btnSettings={btnSettings} />;\r\n            case \"disclaimer\":\r\n                return <Disclaimer {...props} btnSettings={btnSettings} values={values} />;\r\n            case \"end\":\r\n                return <ThankYou {...props} btnSettings={btnSettings} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const scrollContainer = elRef.current;\r\n        const activeItem = elActiveStep.current;\r\n        if(!activeItem) {\r\n            return;\r\n        }\r\n        const scrollRect = scrollContainer.getBoundingClientRect();\r\n        const activeRect = activeItem.getBoundingClientRect();\r\n        const scrollLeftPosition = activeRect.left - scrollRect.left - (scrollRect.width / 2) + (activeRect.width / 2);\r\n        if (scrollContainer && width < 992) {\r\n            scrollContainer.scrollLeft += scrollLeftPosition;\r\n        }\r\n    }, [stepIndex]);\r\n\r\n    return (\r\n        <div className=\"react-form__wrap\">\r\n            <React.Fragment>\r\n                <div className=\"stepper__wrap\">\r\n                    <Stepper ref={elRef} nonLinear activeStep={stepIndex} className=\"stepper\" connector={0}>\r\n                    {steps.map(item => {\r\n                        const endForm = width < 536 && item.id === \"end\";\r\n                        return (\r\n                            <Step\r\n                                ref={(ref) => {\r\n                                    if(steps.indexOf(item) === stepIndex) {\r\n                                        elActiveStep.current = ref;\r\n                                    }\r\n                                }}\r\n                                onClick={() => go(steps.indexOf(item))}\r\n                                key={item.id}\r\n                                className={\r\n                                    clsx(\"stepper__item\",\r\n                                        steps.indexOf(item) === stepIndex && \"active\",\r\n                                        checkerArray(completed) && \"not-click\",\r\n                                        width > 536 && item.id === \"end\" && \"not-display\",\r\n                                        endForm && \"finish\",\r\n                                        !unlockedSteps[steps.indexOf(item)] && \"step-lock\"\r\n                                    )}>\r\n\r\n                                <StepLabel\r\n                                    className=\"stepper__label\"\r\n                                    key={item.id}\r\n                                    completed={completed[steps.indexOf(item)]}\r\n                                    StepIconComponent={(props) => <AlbaStepIcon {...props} endForm={endForm} width={width} />}>\r\n                                    <span className={clsx(\"stepper__label__title\", steps.indexOf(item) === stepIndex && \"active\")}>\r\n                                        {!endForm && item.title}\r\n                                    </span>\r\n                                </StepLabel>\r\n                            </Step>\r\n                        )\r\n                    })}\r\n                </Stepper>\r\n                </div>\r\n                <div className=\"react-form__over\">\r\n                    <React.Fragment>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            className=\"react-form__container\"\r\n                        >\r\n                        {stepIndex === steps.length ? (\r\n                            <div>Success</div>\r\n                        ) : (\r\n                            <Formik\r\n                                initialValues={formInitialValues}\r\n                                validationSchema={currentValidationSchema}\r\n                                onSubmit={handleSubmit}\r\n                            >\r\n                                {({ isSubmitting, isValid, values }) => {\r\n                                    const clickSubmitBtn = () => {\r\n                                        if(!isValid) {\r\n                                            setUncompleted()\r\n                                        }\r\n                                    }\r\n                                    const btnSettings = {clickSubmitBtn, isSubmitting, btnNext};\r\n                                    return (\r\n                                        <Form id={formId} className=\"react-form\" noValidate>\r\n                                            <FormikOnError>\r\n                                                <div className={clsx(\"react-form__content\", stepId === \"end\" && \"align-items-center\")}>\r\n                                                    {width < 992 && renderStepContent(stepId, values, clickSubmitBtn, isSubmitting, btnNext)}\r\n                                                    {width > 992 && (\r\n                                                        <SwipeableViews\r\n                                                            disabled={true}\r\n                                                            springConfig={{\r\n                                                                delay: '0s',\r\n                                                                duration: '1s',\r\n                                                                easeFunction: 'cubic-bezier(0.15, 0.3, 0.25, 1)'\r\n                                                            }}\r\n                                                            containerStyle={{\r\n                                                                transition: 'transform 1s cubic-bezier(0.15, 0.3, 0.25, 1) 0s'\r\n                                                            }}\r\n                                                            slideStyle={{duration: '1s', delay: '0s'}}\r\n                                                            slideClassName=\"fr-slide\"\r\n                                                            index={stepIndex}\r\n                                                        >\r\n                                                            <Introduction {...props} btnSettings={btnSettings} />\r\n                                                            <PersonalData {...props} btnSettings={btnSettings} />\r\n                                                            <Education {...props} btnSettings={btnSettings} />\r\n                                                            <EmploymentHistory {...props} values={values} btnSettings={btnSettings} />\r\n                                                            <Disclaimer {...props} btnSettings={btnSettings} values={values} />\r\n                                                            <ThankYou {...props} btnSettings={btnSettings} />\r\n                                                        </SwipeableViews>\r\n                                                    )}\r\n                                                </div>\r\n                                            </FormikOnError>\r\n                                        </Form>\r\n                                    )\r\n                                }}\r\n                            </Formik>\r\n                        )}\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                </div>\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MultiStepForm;\r\n","import React from 'react';\r\nimport './scss/_app.scss';\r\nimport MultiStepForm from \"./views/MultiStepForm\";\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from './theme';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport smoothscroll from 'smoothscroll-polyfill';\r\n\r\nsmoothscroll.polyfill();\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <MultiStepForm />\r\n          </MuiPickersUtilsProvider>\r\n      </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootEl = document.getElementById(\"md-react-app\");\r\nif (rootEl) {\r\n    // const settings = JSON.parse( rootEl.getAttribute( 'data-default-settings' ) );\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>,\r\n        rootEl\r\n    );\r\n}\r\n"],"sourceRoot":""}